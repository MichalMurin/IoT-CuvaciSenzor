
SemestralnaPraca.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000098  00800100  0000114a  000011de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000114a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800198  00800198  00001276  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001276  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000012d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d8  00000000  00000000  00001314  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002fdb  00000000  00000000  000014ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001702  00000000  00000000  000044c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000108b  00000000  00000000  00005bc9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000438  00000000  00000000  00006c54  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ae2  00000000  00000000  0000708c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000011e6  00000000  00000000  00007b6e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000168  00000000  00000000  00008d54  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__ctors_end>
       4:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__vector_1>
       8:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
       c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      10:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      14:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      18:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      1c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      20:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      24:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      28:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      2c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      30:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      34:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      38:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      3c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      40:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      44:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      48:	0c 94 9a 03 	jmp	0x734	; 0x734 <__vector_18>
      4c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      50:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      54:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      58:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      5c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      60:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      64:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      68:	1a 01       	movw	r2, r20
      6a:	3e 01       	movw	r6, r28
      6c:	1c 01       	movw	r2, r24
      6e:	1e 01       	movw	r2, r28
      70:	20 01       	movw	r4, r0
      72:	22 01       	movw	r4, r4
      74:	24 01       	movw	r4, r8
      76:	26 01       	movw	r4, r12
      78:	28 01       	movw	r4, r16
      7a:	2a 01       	movw	r4, r20
      7c:	2c 01       	movw	r4, r24
      7e:	2e 01       	movw	r4, r28
      80:	30 01       	movw	r6, r0
      82:	32 01       	movw	r6, r4
      84:	34 01       	movw	r6, r8
      86:	36 01       	movw	r6, r12
      88:	38 01       	movw	r6, r16
      8a:	3a 01       	movw	r6, r20
      8c:	3c 02       	muls	r19, r28
      8e:	42 02       	muls	r20, r18
      90:	48 02       	muls	r20, r24
      92:	4e 02       	muls	r20, r30
      94:	54 02       	muls	r21, r20
      96:	5a 02       	muls	r21, r26
      98:	60 02       	muls	r22, r16

0000009a <__ctors_end>:
      9a:	11 24       	eor	r1, r1
      9c:	1f be       	out	0x3f, r1	; 63
      9e:	cf ef       	ldi	r28, 0xFF	; 255
      a0:	d8 e0       	ldi	r29, 0x08	; 8
      a2:	de bf       	out	0x3e, r29	; 62
      a4:	cd bf       	out	0x3d, r28	; 61

000000a6 <__do_copy_data>:
      a6:	11 e0       	ldi	r17, 0x01	; 1
      a8:	a0 e0       	ldi	r26, 0x00	; 0
      aa:	b1 e0       	ldi	r27, 0x01	; 1
      ac:	ea e4       	ldi	r30, 0x4A	; 74
      ae:	f1 e1       	ldi	r31, 0x11	; 17
      b0:	02 c0       	rjmp	.+4      	; 0xb6 <__do_copy_data+0x10>
      b2:	05 90       	lpm	r0, Z+
      b4:	0d 92       	st	X+, r0
      b6:	a8 39       	cpi	r26, 0x98	; 152
      b8:	b1 07       	cpc	r27, r17
      ba:	d9 f7       	brne	.-10     	; 0xb2 <__do_copy_data+0xc>

000000bc <__do_clear_bss>:
      bc:	21 e0       	ldi	r18, 0x01	; 1
      be:	a8 e9       	ldi	r26, 0x98	; 152
      c0:	b1 e0       	ldi	r27, 0x01	; 1
      c2:	01 c0       	rjmp	.+2      	; 0xc6 <.do_clear_bss_start>

000000c4 <.do_clear_bss_loop>:
      c4:	1d 92       	st	X+, r1

000000c6 <.do_clear_bss_start>:
      c6:	a4 3a       	cpi	r26, 0xA4	; 164
      c8:	b2 07       	cpc	r27, r18
      ca:	e1 f7       	brne	.-8      	; 0xc4 <.do_clear_bss_loop>
      cc:	0e 94 cd 02 	call	0x59a	; 0x59a <main>
      d0:	0c 94 a3 08 	jmp	0x1146	; 0x1146 <_exit>

000000d4 <__bad_interrupt>:
      d4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d8 <_ZN3BtnC1Ev>:
	return is_pressed;
}

void Btn::setPressed(bool pressed)
{
	is_pressed = pressed;
      d8:	fc 01       	movw	r30, r24
      da:	9a b1       	in	r25, 0x0a	; 10
      dc:	9b 7f       	andi	r25, 0xFB	; 251
      de:	9a b9       	out	0x0a, r25	; 10
      e0:	9b b1       	in	r25, 0x0b	; 11
      e2:	94 60       	ori	r25, 0x04	; 4
      e4:	9b b9       	out	0x0b, r25	; 11
      e6:	f0 93 99 01 	sts	0x0199, r31	; 0x800199 <__data_end+0x1>
      ea:	e0 93 98 01 	sts	0x0198, r30	; 0x800198 <__data_end>
      ee:	10 82       	st	Z, r1
      f0:	08 95       	ret

000000f2 <_ZN3Btn13initInterruptE9externInt>:
      f2:	e9 e6       	ldi	r30, 0x69	; 105
      f4:	f0 e0       	ldi	r31, 0x00	; 0
      f6:	80 81       	ld	r24, Z
      f8:	68 2b       	or	r22, r24
      fa:	60 83       	st	Z, r22
      fc:	8d b3       	in	r24, 0x1d	; 29
      fe:	81 60       	ori	r24, 0x01	; 1
     100:	8d bb       	out	0x1d, r24	; 29
     102:	08 95       	ret

00000104 <_ZN3Btn16interruptHandlerEv>:
     104:	1f 93       	push	r17
     106:	cf 93       	push	r28
     108:	df 93       	push	r29
     10a:	1f 92       	push	r1
     10c:	cd b7       	in	r28, 0x3d	; 61
     10e:	de b7       	in	r29, 0x3e	; 62
     110:	fc 01       	movw	r30, r24
     112:	8b b1       	in	r24, 0x0b	; 11
     114:	98 e0       	ldi	r25, 0x08	; 8
     116:	98 27       	eor	r25, r24
     118:	9b b9       	out	0x0b, r25	; 11
     11a:	81 e0       	ldi	r24, 0x01	; 1
     11c:	80 83       	st	Z, r24
     11e:	ce 01       	movw	r24, r28
     120:	01 96       	adiw	r24, 0x01	; 1
     122:	0e 94 65 01 	call	0x2ca	; 0x2ca <_ZN6EepromC1Ev>
     126:	81 e0       	ldi	r24, 0x01	; 1
     128:	90 e0       	ldi	r25, 0x00	; 0
     12a:	0e 94 92 01 	call	0x324	; 0x324 <_ZN6Eeprom4ReadEj>
     12e:	18 2f       	mov	r17, r24
     130:	90 e0       	ldi	r25, 0x00	; 0
     132:	0e 94 92 01 	call	0x324	; 0x324 <_ZN6Eeprom4ReadEj>
     136:	68 2f       	mov	r22, r24
     138:	80 e0       	ldi	r24, 0x00	; 0
     13a:	90 e0       	ldi	r25, 0x00	; 0
     13c:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN6Eeprom5WriteEjh>
     140:	16 30       	cpi	r17, 0x06	; 6
     142:	09 f4       	brne	.+2      	; 0x146 <_ZN3Btn16interruptHandlerEv+0x42>
     144:	11 e0       	ldi	r17, 0x01	; 1
     146:	61 e0       	ldi	r22, 0x01	; 1
     148:	61 0f       	add	r22, r17
     14a:	81 e0       	ldi	r24, 0x01	; 1
     14c:	90 e0       	ldi	r25, 0x00	; 0
     14e:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN6Eeprom5WriteEjh>
     152:	86 e0       	ldi	r24, 0x06	; 6
     154:	91 e0       	ldi	r25, 0x01	; 1
     156:	0e 94 67 04 	call	0x8ce	; 0x8ce <puts>
     15a:	ce 01       	movw	r24, r28
     15c:	01 96       	adiw	r24, 0x01	; 1
     15e:	0e 94 66 01 	call	0x2cc	; 0x2cc <_ZN6EepromD1Ev>
     162:	0f 90       	pop	r0
     164:	df 91       	pop	r29
     166:	cf 91       	pop	r28
     168:	1f 91       	pop	r17
     16a:	08 95       	ret

0000016c <__vector_1>:
}

ISR(INT0_vect)
{
     16c:	1f 92       	push	r1
     16e:	0f 92       	push	r0
     170:	0f b6       	in	r0, 0x3f	; 63
     172:	0f 92       	push	r0
     174:	11 24       	eor	r1, r1
     176:	2f 93       	push	r18
     178:	3f 93       	push	r19
     17a:	4f 93       	push	r20
     17c:	5f 93       	push	r21
     17e:	6f 93       	push	r22
     180:	7f 93       	push	r23
     182:	8f 93       	push	r24
     184:	9f 93       	push	r25
     186:	af 93       	push	r26
     188:	bf 93       	push	r27
     18a:	ef 93       	push	r30
     18c:	ff 93       	push	r31
	Btn::button_ptr->interruptHandler();
     18e:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <__data_end>
     192:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <__data_end+0x1>
     196:	0e 94 82 00 	call	0x104	; 0x104 <_ZN3Btn16interruptHandlerEv>
     19a:	ff 91       	pop	r31
     19c:	ef 91       	pop	r30
     19e:	bf 91       	pop	r27
     1a0:	af 91       	pop	r26
     1a2:	9f 91       	pop	r25
     1a4:	8f 91       	pop	r24
     1a6:	7f 91       	pop	r23
     1a8:	6f 91       	pop	r22
     1aa:	5f 91       	pop	r21
     1ac:	4f 91       	pop	r20
     1ae:	3f 91       	pop	r19
     1b0:	2f 91       	pop	r18
     1b2:	0f 90       	pop	r0
     1b4:	0f be       	out	0x3f, r0	; 63
     1b6:	0f 90       	pop	r0
     1b8:	1f 90       	pop	r1
     1ba:	18 95       	reti

000001bc <_ZN7DisplayC1Ev>:
		this -> Dsp(result);
}

void Display::delayMs(int ms)
{
	for(int i=1; i<ms; i++)
     1bc:	87 b1       	in	r24, 0x07	; 7
     1be:	80 62       	ori	r24, 0x20	; 32
     1c0:	87 b9       	out	0x07, r24	; 7
     1c2:	87 b1       	in	r24, 0x07	; 7
     1c4:	80 61       	ori	r24, 0x10	; 16
     1c6:	87 b9       	out	0x07, r24	; 7
     1c8:	8a b1       	in	r24, 0x0a	; 10
     1ca:	80 68       	ori	r24, 0x80	; 128
     1cc:	8a b9       	out	0x0a, r24	; 10
     1ce:	84 b1       	in	r24, 0x04	; 4
     1d0:	82 60       	ori	r24, 0x02	; 2
     1d2:	84 b9       	out	0x04, r24	; 4
     1d4:	08 95       	ret

000001d6 <_ZN7Display3DspEh>:
	_delay_ms(1);
}

void Display::Dsp(uint8_t num)
{
	sbi(PORTC,OE);								//zapiseme log 1 aby sme vypli OE a neovlpyvnovali vystup
     1d6:	88 b1       	in	r24, 0x08	; 8
     1d8:	80 61       	ori	r24, 0x10	; 16
     1da:	88 b9       	out	0x08, r24	; 8
	for (int i=0 ; i<8 ; i++)
     1dc:	20 e0       	ldi	r18, 0x00	; 0
     1de:	30 e0       	ldi	r19, 0x00	; 0
     1e0:	28 30       	cpi	r18, 0x08	; 8
     1e2:	31 05       	cpc	r19, r1
     1e4:	9c f4       	brge	.+38     	; 0x20c <_ZN7Display3DspEh+0x36>
	{
		if ((num & 0b10000000) == 0b10000000)	//skontorlujem najvyssi bit
     1e6:	66 23       	and	r22, r22
     1e8:	24 f4       	brge	.+8      	; 0x1f2 <_ZN7Display3DspEh+0x1c>
		{
			sbi(PORTC,SER);
     1ea:	88 b1       	in	r24, 0x08	; 8
     1ec:	80 62       	ori	r24, 0x20	; 32
     1ee:	88 b9       	out	0x08, r24	; 8
     1f0:	03 c0       	rjmp	.+6      	; 0x1f8 <_ZN7Display3DspEh+0x22>
		}
		else
		{
			cbi(PORTC,SER);
     1f2:	88 b1       	in	r24, 0x08	; 8
     1f4:	8f 7d       	andi	r24, 0xDF	; 223
     1f6:	88 b9       	out	0x08, r24	; 8
		}
		num = num << 1;
     1f8:	66 0f       	add	r22, r22
		sbi(PORTB, SRCLK);
     1fa:	85 b1       	in	r24, 0x05	; 5
     1fc:	82 60       	ori	r24, 0x02	; 2
     1fe:	85 b9       	out	0x05, r24	; 5
		cbi(PORTB, SRCLK);
     200:	85 b1       	in	r24, 0x05	; 5
     202:	8d 7f       	andi	r24, 0xFD	; 253
     204:	85 b9       	out	0x05, r24	; 5
}

void Display::Dsp(uint8_t num)
{
	sbi(PORTC,OE);								//zapiseme log 1 aby sme vypli OE a neovlpyvnovali vystup
	for (int i=0 ; i<8 ; i++)
     206:	2f 5f       	subi	r18, 0xFF	; 255
     208:	3f 4f       	sbci	r19, 0xFF	; 255
     20a:	ea cf       	rjmp	.-44     	; 0x1e0 <_ZN7Display3DspEh+0xa>
		num = num << 1;
		sbi(PORTB, SRCLK);
		cbi(PORTB, SRCLK);
		
	}
	sbi(PORTD,RCLK);		//	transcript from shift register to memory
     20c:	8b b1       	in	r24, 0x0b	; 11
     20e:	80 68       	ori	r24, 0x80	; 128
     210:	8b b9       	out	0x0b, r24	; 11
	cbi(PORTD,RCLK);		//  impulse
     212:	8b b1       	in	r24, 0x0b	; 11
     214:	8f 77       	andi	r24, 0x7F	; 127
     216:	8b b9       	out	0x0b, r24	; 11
	cbi(PORTC,OE);			//	set output
     218:	88 b1       	in	r24, 0x08	; 8
     21a:	8f 7e       	andi	r24, 0xEF	; 239
     21c:	88 b9       	out	0x08, r24	; 8
     21e:	08 95       	ret

00000220 <_ZN7Display4ShowEh>:


void Display::Show(uint8_t num)
{
		uint8_t result;
		switch (num)
     220:	46 2f       	mov	r20, r22
     222:	50 e0       	ldi	r21, 0x00	; 0
     224:	42 31       	cpi	r20, 0x12	; 18
     226:	51 05       	cpc	r21, r1
     228:	38 f5       	brcc	.+78     	; 0x278 <_ZN7Display4ShowEh+0x58>
     22a:	fa 01       	movw	r30, r20
     22c:	ec 5c       	subi	r30, 0xCC	; 204
     22e:	ff 4f       	sbci	r31, 0xFF	; 255
     230:	0c 94 ec 03 	jmp	0x7d8	; 0x7d8 <__tablejump2__>
		{
			case 0:
				result=ZERO;
     234:	6f e3       	ldi	r22, 0x3F	; 63
     236:	23 c0       	rjmp	.+70     	; 0x27e <_ZN7Display4ShowEh+0x5e>
				break;
			case 1:
				result=ONE;
				break;
			case 2:
				result=TWO;
     238:	6b e5       	ldi	r22, 0x5B	; 91
				break;
     23a:	21 c0       	rjmp	.+66     	; 0x27e <_ZN7Display4ShowEh+0x5e>
			case 3:
				result=THREE;
     23c:	6f e4       	ldi	r22, 0x4F	; 79
				break;
     23e:	1f c0       	rjmp	.+62     	; 0x27e <_ZN7Display4ShowEh+0x5e>
			case 4:
				result=FOUR;
     240:	66 e6       	ldi	r22, 0x66	; 102
				break;
     242:	1d c0       	rjmp	.+58     	; 0x27e <_ZN7Display4ShowEh+0x5e>
			case 5:
				result=FIVE;
     244:	6d e6       	ldi	r22, 0x6D	; 109
				break;
     246:	1b c0       	rjmp	.+54     	; 0x27e <_ZN7Display4ShowEh+0x5e>
			case 6:
				result=SIX;
     248:	6d ef       	ldi	r22, 0xFD	; 253
				break;
     24a:	19 c0       	rjmp	.+50     	; 0x27e <_ZN7Display4ShowEh+0x5e>
			case 7:
				result=SEVEN;
     24c:	67 e0       	ldi	r22, 0x07	; 7
				break;
     24e:	17 c0       	rjmp	.+46     	; 0x27e <_ZN7Display4ShowEh+0x5e>
			case 8:
				result=EIGHT;
     250:	6f e7       	ldi	r22, 0x7F	; 127
				break;
     252:	15 c0       	rjmp	.+42     	; 0x27e <_ZN7Display4ShowEh+0x5e>
			case 9:
				result=NINE;
     254:	6f ee       	ldi	r22, 0xEF	; 239
				break;
     256:	13 c0       	rjmp	.+38     	; 0x27e <_ZN7Display4ShowEh+0x5e>
			case 10:
				result=AHEX;
     258:	67 e7       	ldi	r22, 0x77	; 119
				break;
     25a:	11 c0       	rjmp	.+34     	; 0x27e <_ZN7Display4ShowEh+0x5e>
			case 11:
				result=BHEX;
     25c:	6c e7       	ldi	r22, 0x7C	; 124
				break;
     25e:	0f c0       	rjmp	.+30     	; 0x27e <_ZN7Display4ShowEh+0x5e>
			case 12:
				result=CHEX;
     260:	68 e5       	ldi	r22, 0x58	; 88
				break;
     262:	0d c0       	rjmp	.+26     	; 0x27e <_ZN7Display4ShowEh+0x5e>
			case 13:
				result=DHEX;
     264:	6e e5       	ldi	r22, 0x5E	; 94
				break;
     266:	0b c0       	rjmp	.+22     	; 0x27e <_ZN7Display4ShowEh+0x5e>
			case 14:
				result=EHEX;
     268:	69 e7       	ldi	r22, 0x79	; 121
				break;
     26a:	09 c0       	rjmp	.+18     	; 0x27e <_ZN7Display4ShowEh+0x5e>
			case 15:
				result=FHEX;
     26c:	61 e7       	ldi	r22, 0x71	; 113
				break;
     26e:	07 c0       	rjmp	.+14     	; 0x27e <_ZN7Display4ShowEh+0x5e>
			case 16:
				result=ERR;
     270:	69 e4       	ldi	r22, 0x49	; 73
				break;
     272:	05 c0       	rjmp	.+10     	; 0x27e <_ZN7Display4ShowEh+0x5e>
			case 17:
				result=DOT;
     274:	60 e8       	ldi	r22, 0x80	; 128
				break;
     276:	03 c0       	rjmp	.+6      	; 0x27e <_ZN7Display4ShowEh+0x5e>
			default:
				result = NONE;
     278:	60 e0       	ldi	r22, 0x00	; 0
				break;
     27a:	01 c0       	rjmp	.+2      	; 0x27e <_ZN7Display4ShowEh+0x5e>
		{
			case 0:
				result=ZERO;
				break;
			case 1:
				result=ONE;
     27c:	66 e0       	ldi	r22, 0x06	; 6
				break;
			default:
				result = NONE;
				break;
		}
		this -> Dsp(result);
     27e:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_ZN7Display3DspEh>
     282:	08 95       	ret

00000284 <_ZN9DSTSensorC1Ev>:
	sbi(DDRC, TRIG);
	cbi(DDRC, ECHO);
} //DSTSensor

// default destructor
DSTSensor::~DSTSensor()
     284:	87 b1       	in	r24, 0x07	; 7
     286:	84 60       	ori	r24, 0x04	; 4
     288:	87 b9       	out	0x07, r24	; 7
     28a:	87 b1       	in	r24, 0x07	; 7
     28c:	87 7f       	andi	r24, 0xF7	; 247
     28e:	87 b9       	out	0x07, r24	; 7
     290:	08 95       	ret

00000292 <_ZN9DSTSensor11getDistanceEv>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     292:	28 e2       	ldi	r18, 0x28	; 40
     294:	2a 95       	dec	r18
     296:	f1 f7       	brne	.-4      	; 0x294 <_ZN9DSTSensor11getDistanceEv+0x2>
} //~DSTSensor

int DSTSensor::getDistance()		//returns distance in cm
{
	_delay_us(10);
	sbi(PORTC, TRIG);
     298:	88 b1       	in	r24, 0x08	; 8
     29a:	84 60       	ori	r24, 0x04	; 4
     29c:	88 b9       	out	0x08, r24	; 8
     29e:	88 e2       	ldi	r24, 0x28	; 40
     2a0:	8a 95       	dec	r24
     2a2:	f1 f7       	brne	.-4      	; 0x2a0 <_ZN9DSTSensor11getDistanceEv+0xe>
	_delay_us(10);
	cbi(PORTC, TRIG);
     2a4:	88 b1       	in	r24, 0x08	; 8
     2a6:	8b 7f       	andi	r24, 0xFB	; 251
     2a8:	88 b9       	out	0x08, r24	; 8
	
	uint8_t timeInMicroseconds = 0;	
	int centiMeters = 0;			//1cm == 58 us , 1dm == 580us
	//uint8_t decimeters = 0;
	while((PINC &(1<<ECHO))== 0)
     2aa:	33 99       	sbic	0x06, 3	; 6
     2ac:	04 c0       	rjmp	.+8      	; 0x2b6 <_ZN9DSTSensor11getDistanceEv+0x24>
     2ae:	24 e0       	ldi	r18, 0x04	; 4
     2b0:	2a 95       	dec	r18
     2b2:	f1 f7       	brne	.-4      	; 0x2b0 <_ZN9DSTSensor11getDistanceEv+0x1e>
     2b4:	fa cf       	rjmp	.-12     	; 0x2aa <_ZN9DSTSensor11getDistanceEv+0x18>
     2b6:	80 e0       	ldi	r24, 0x00	; 0
     2b8:	90 e0       	ldi	r25, 0x00	; 0
			{
				break;
			}
		}
		
	while((PINC &(1<<ECHO))!= 0)
     2ba:	33 9b       	sbis	0x06, 3	; 6
     2bc:	05 c0       	rjmp	.+10     	; 0x2c8 <_ZN9DSTSensor11getDistanceEv+0x36>
     2be:	28 ee       	ldi	r18, 0xE8	; 232
     2c0:	2a 95       	dec	r18
     2c2:	f1 f7       	brne	.-4      	; 0x2c0 <_ZN9DSTSensor11getDistanceEv+0x2e>
	{
		_delay_us(58);
		centiMeters++;
     2c4:	01 96       	adiw	r24, 0x01	; 1
			{
				break;
			}
		}
		
	while((PINC &(1<<ECHO))!= 0)
     2c6:	f9 cf       	rjmp	.-14     	; 0x2ba <_ZN9DSTSensor11getDistanceEv+0x28>
		centiMeters++;
		
	}
	
	return centiMeters;
}
     2c8:	08 95       	ret

000002ca <_ZN6EepromC1Ev>:


#include "Eeprom.h"

// default constructor
Eeprom::Eeprom()
     2ca:	08 95       	ret

000002cc <_ZN6EepromD1Ev>:
{
} //Eeprom

// default destructor
Eeprom::~Eeprom()
     2cc:	08 95       	ret

000002ce <_ZN6Eeprom5WriteEjh>:
} //~Eeprom

void Eeprom::Write(uint16_t Addr, uint8_t data)
{
	/* Wait for completion of previous write */
	while(EECR & (1<<EEPE));
     2ce:	f9 99       	sbic	0x1f, 1	; 31
     2d0:	fe cf       	rjmp	.-4      	; 0x2ce <_ZN6Eeprom5WriteEjh>
	/* Set up address and Data Registers */
	EEAR = Addr;
     2d2:	92 bd       	out	0x22, r25	; 34
     2d4:	81 bd       	out	0x21, r24	; 33
	EEDR = data;
     2d6:	60 bd       	out	0x20, r22	; 32
	/* Write logical one to EEMPE */
	EECR |= (1<<EEMPE);
     2d8:	8f b3       	in	r24, 0x1f	; 31
     2da:	84 60       	ori	r24, 0x04	; 4
     2dc:	8f bb       	out	0x1f, r24	; 31
	/* Start eeprom write by setting EEPE */
	EECR |= (1<<EEPE);
     2de:	8f b3       	in	r24, 0x1f	; 31
     2e0:	82 60       	ori	r24, 0x02	; 2
     2e2:	8f bb       	out	0x1f, r24	; 31
     2e4:	08 95       	ret

000002e6 <_ZN6Eeprom9setColorsEv>:
}
void Eeprom::setColors()		//save color names in Eeprom
{
	Write(ADD_POSITION,2);
     2e6:	62 e0       	ldi	r22, 0x02	; 2
     2e8:	81 e0       	ldi	r24, 0x01	; 1
     2ea:	90 e0       	ldi	r25, 0x00	; 0
     2ec:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN6Eeprom5WriteEjh>
	char color = 'r';
	Write(2,color);
     2f0:	62 e7       	ldi	r22, 0x72	; 114
     2f2:	82 e0       	ldi	r24, 0x02	; 2
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN6Eeprom5WriteEjh>
	color = 'g';
	Write(3,color);
     2fa:	67 e6       	ldi	r22, 0x67	; 103
     2fc:	83 e0       	ldi	r24, 0x03	; 3
     2fe:	90 e0       	ldi	r25, 0x00	; 0
     300:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN6Eeprom5WriteEjh>
	color = 'b';
	Write(4,color);
     304:	62 e6       	ldi	r22, 0x62	; 98
     306:	84 e0       	ldi	r24, 0x04	; 4
     308:	90 e0       	ldi	r25, 0x00	; 0
     30a:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN6Eeprom5WriteEjh>
	color = 'p';
	Write(5,color);
     30e:	60 e7       	ldi	r22, 0x70	; 112
     310:	85 e0       	ldi	r24, 0x05	; 5
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN6Eeprom5WriteEjh>
	color = 'w';
	Write(6,color);
     318:	67 e7       	ldi	r22, 0x77	; 119
     31a:	86 e0       	ldi	r24, 0x06	; 6
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN6Eeprom5WriteEjh>
     322:	08 95       	ret

00000324 <_ZN6Eeprom4ReadEj>:
}
uint8_t Eeprom::Read(uint16_t Addr)
{
	/* Wait for completion of previous write */
	while(EECR & (1<<EEPE))
     324:	f9 99       	sbic	0x1f, 1	; 31
     326:	fe cf       	rjmp	.-4      	; 0x324 <_ZN6Eeprom4ReadEj>
	;
	/* Set up address register */
	EEAR = Addr;
     328:	92 bd       	out	0x22, r25	; 34
     32a:	81 bd       	out	0x21, r24	; 33
	/* Start eeprom read by writing EERE */
	EECR |= (1<<EERE);
     32c:	8f b3       	in	r24, 0x1f	; 31
     32e:	81 60       	ori	r24, 0x01	; 1
     330:	8f bb       	out	0x1f, r24	; 31
	/* Return data from Data Register */
	return EEDR;
     332:	80 b5       	in	r24, 0x20	; 32
}
     334:	08 95       	ret

00000336 <_ZN3LedC1Ev>:
	set(c);
	delayUs(intensity);
	set(0,0,0);
	delayUs(100 -intensity);
	
}
     336:	8a b1       	in	r24, 0x0a	; 10
     338:	80 64       	ori	r24, 0x40	; 64
     33a:	8a b9       	out	0x0a, r24	; 10
     33c:	8a b1       	in	r24, 0x0a	; 10
     33e:	88 60       	ori	r24, 0x08	; 8
     340:	8a b9       	out	0x0a, r24	; 10
     342:	8a b1       	in	r24, 0x0a	; 10
     344:	80 62       	ori	r24, 0x20	; 32
     346:	8a b9       	out	0x0a, r24	; 10
     348:	8b b1       	in	r24, 0x0b	; 11
     34a:	80 62       	ori	r24, 0x20	; 32
     34c:	8b b9       	out	0x0b, r24	; 11
     34e:	8b b1       	in	r24, 0x0b	; 11
     350:	88 60       	ori	r24, 0x08	; 8
     352:	8b b9       	out	0x0b, r24	; 11
     354:	8b b1       	in	r24, 0x0b	; 11
     356:	80 64       	ori	r24, 0x40	; 64
     358:	8b b9       	out	0x0b, r24	; 11
     35a:	14 bc       	out	0x24, r1	; 36
     35c:	15 bc       	out	0x25, r1	; 37
     35e:	84 b5       	in	r24, 0x24	; 36
     360:	81 60       	ori	r24, 0x01	; 1
     362:	84 bd       	out	0x24, r24	; 36
     364:	84 b5       	in	r24, 0x24	; 36
     366:	82 60       	ori	r24, 0x02	; 2
     368:	84 bd       	out	0x24, r24	; 36
     36a:	85 b5       	in	r24, 0x25	; 37
     36c:	84 60       	ori	r24, 0x04	; 4
     36e:	85 bd       	out	0x25, r24	; 37
     370:	e0 eb       	ldi	r30, 0xB0	; 176
     372:	f0 e0       	ldi	r31, 0x00	; 0
     374:	80 81       	ld	r24, Z
     376:	81 60       	ori	r24, 0x01	; 1
     378:	80 83       	st	Z, r24
     37a:	80 81       	ld	r24, Z
     37c:	82 60       	ori	r24, 0x02	; 2
     37e:	80 83       	st	Z, r24
     380:	e1 eb       	ldi	r30, 0xB1	; 177
     382:	f0 e0       	ldi	r31, 0x00	; 0
     384:	80 81       	ld	r24, Z
     386:	82 60       	ori	r24, 0x02	; 2
     388:	80 83       	st	Z, r24
     38a:	80 81       	ld	r24, Z
     38c:	84 60       	ori	r24, 0x04	; 4
     38e:	80 83       	st	Z, r24
     390:	08 95       	ret

00000392 <_ZN3Led3setEbbb>:
     392:	66 23       	and	r22, r22
     394:	21 f0       	breq	.+8      	; 0x39e <_ZN3Led3setEbbb+0xc>
     396:	8b b1       	in	r24, 0x0b	; 11
     398:	8f 7b       	andi	r24, 0xBF	; 191
     39a:	8b b9       	out	0x0b, r24	; 11
     39c:	03 c0       	rjmp	.+6      	; 0x3a4 <_ZN3Led3setEbbb+0x12>
     39e:	8b b1       	in	r24, 0x0b	; 11
     3a0:	80 64       	ori	r24, 0x40	; 64
     3a2:	8b b9       	out	0x0b, r24	; 11
     3a4:	44 23       	and	r20, r20
     3a6:	21 f0       	breq	.+8      	; 0x3b0 <_ZN3Led3setEbbb+0x1e>
     3a8:	8b b1       	in	r24, 0x0b	; 11
     3aa:	87 7f       	andi	r24, 0xF7	; 247
     3ac:	8b b9       	out	0x0b, r24	; 11
     3ae:	03 c0       	rjmp	.+6      	; 0x3b6 <_ZN3Led3setEbbb+0x24>
     3b0:	8b b1       	in	r24, 0x0b	; 11
     3b2:	88 60       	ori	r24, 0x08	; 8
     3b4:	8b b9       	out	0x0b, r24	; 11
     3b6:	22 23       	and	r18, r18
     3b8:	21 f0       	breq	.+8      	; 0x3c2 <_ZN3Led3setEbbb+0x30>
     3ba:	8b b1       	in	r24, 0x0b	; 11
     3bc:	8f 7d       	andi	r24, 0xDF	; 223
     3be:	8b b9       	out	0x0b, r24	; 11
     3c0:	08 95       	ret
     3c2:	8b b1       	in	r24, 0x0b	; 11
     3c4:	80 62       	ori	r24, 0x20	; 32
     3c6:	8b b9       	out	0x0b, r24	; 11
     3c8:	08 95       	ret

000003ca <_ZN3Led7delayMsEi>:
     3ca:	81 e0       	ldi	r24, 0x01	; 1
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	86 17       	cp	r24, r22
     3d0:	97 07       	cpc	r25, r23
     3d2:	44 f4       	brge	.+16     	; 0x3e4 <_ZN3Led7delayMsEi+0x1a>
     3d4:	e7 eb       	ldi	r30, 0xB7	; 183
     3d6:	fb e0       	ldi	r31, 0x0B	; 11
     3d8:	31 97       	sbiw	r30, 0x01	; 1
     3da:	f1 f7       	brne	.-4      	; 0x3d8 <_ZN3Led7delayMsEi+0xe>
     3dc:	00 c0       	rjmp	.+0      	; 0x3de <_ZN3Led7delayMsEi+0x14>
     3de:	00 00       	nop
     3e0:	01 96       	adiw	r24, 0x01	; 1
     3e2:	f5 cf       	rjmp	.-22     	; 0x3ce <_ZN3Led7delayMsEi+0x4>
     3e4:	08 95       	ret

000003e6 <_ZN3Led12setIntensityEhhh>:
     3e6:	61 11       	cpse	r22, r1
     3e8:	0a c0       	rjmp	.+20     	; 0x3fe <_ZN3Led12setIntensityEhhh+0x18>
     3ea:	84 b5       	in	r24, 0x24	; 36
     3ec:	8f 7b       	andi	r24, 0xBF	; 191
     3ee:	84 bd       	out	0x24, r24	; 36
     3f0:	84 b5       	in	r24, 0x24	; 36
     3f2:	8f 77       	andi	r24, 0x7F	; 127
     3f4:	84 bd       	out	0x24, r24	; 36
     3f6:	8b b1       	in	r24, 0x0b	; 11
     3f8:	80 64       	ori	r24, 0x40	; 64
     3fa:	8b b9       	out	0x0b, r24	; 11
     3fc:	07 c0       	rjmp	.+14     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
     3fe:	84 b5       	in	r24, 0x24	; 36
     400:	80 64       	ori	r24, 0x40	; 64
     402:	84 bd       	out	0x24, r24	; 36
     404:	84 b5       	in	r24, 0x24	; 36
     406:	80 68       	ori	r24, 0x80	; 128
     408:	84 bd       	out	0x24, r24	; 36
     40a:	67 bd       	out	0x27, r22	; 39
     40c:	41 11       	cpse	r20, r1
     40e:	0c c0       	rjmp	.+24     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
     410:	e0 eb       	ldi	r30, 0xB0	; 176
     412:	f0 e0       	ldi	r31, 0x00	; 0
     414:	80 81       	ld	r24, Z
     416:	8f 7e       	andi	r24, 0xEF	; 239
     418:	80 83       	st	Z, r24
     41a:	80 81       	ld	r24, Z
     41c:	8f 7d       	andi	r24, 0xDF	; 223
     41e:	80 83       	st	Z, r24
     420:	8b b1       	in	r24, 0x0b	; 11
     422:	88 60       	ori	r24, 0x08	; 8
     424:	8b b9       	out	0x0b, r24	; 11
     426:	0a c0       	rjmp	.+20     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
     428:	e0 eb       	ldi	r30, 0xB0	; 176
     42a:	f0 e0       	ldi	r31, 0x00	; 0
     42c:	80 81       	ld	r24, Z
     42e:	80 61       	ori	r24, 0x10	; 16
     430:	80 83       	st	Z, r24
     432:	80 81       	ld	r24, Z
     434:	80 62       	ori	r24, 0x20	; 32
     436:	80 83       	st	Z, r24
     438:	40 93 b4 00 	sts	0x00B4, r20	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     43c:	21 11       	cpse	r18, r1
     43e:	0a c0       	rjmp	.+20     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
     440:	84 b5       	in	r24, 0x24	; 36
     442:	8f 7e       	andi	r24, 0xEF	; 239
     444:	84 bd       	out	0x24, r24	; 36
     446:	84 b5       	in	r24, 0x24	; 36
     448:	8f 7d       	andi	r24, 0xDF	; 223
     44a:	84 bd       	out	0x24, r24	; 36
     44c:	8b b1       	in	r24, 0x0b	; 11
     44e:	80 62       	ori	r24, 0x20	; 32
     450:	8b b9       	out	0x0b, r24	; 11
     452:	08 95       	ret
     454:	84 b5       	in	r24, 0x24	; 36
     456:	80 61       	ori	r24, 0x10	; 16
     458:	84 bd       	out	0x24, r24	; 36
     45a:	84 b5       	in	r24, 0x24	; 36
     45c:	80 62       	ori	r24, 0x20	; 32
     45e:	84 bd       	out	0x24, r24	; 36
     460:	28 bd       	out	0x28, r18	; 40
     462:	08 95       	ret

00000464 <_ZN3Led3setE5Color>:
     464:	46 2f       	mov	r20, r22
     466:	50 e0       	ldi	r21, 0x00	; 0
     468:	47 30       	cpi	r20, 0x07	; 7
     46a:	51 05       	cpc	r21, r1
     46c:	78 f5       	brcc	.+94     	; 0x4cc <_ZN3Led3setE5Color+0x68>
     46e:	fa 01       	movw	r30, r20
     470:	ea 5b       	subi	r30, 0xBA	; 186
     472:	ff 4f       	sbci	r31, 0xFF	; 255
     474:	0c 94 ec 03 	jmp	0x7d8	; 0x7d8 <__tablejump2__>
     478:	20 e0       	ldi	r18, 0x00	; 0
     47a:	40 e0       	ldi	r20, 0x00	; 0
     47c:	61 e0       	ldi	r22, 0x01	; 1
     47e:	0e 94 c9 01 	call	0x392	; 0x392 <_ZN3Led3setEbbb>
     482:	08 95       	ret
     484:	20 e0       	ldi	r18, 0x00	; 0
     486:	41 e0       	ldi	r20, 0x01	; 1
     488:	60 e0       	ldi	r22, 0x00	; 0
     48a:	0e 94 c9 01 	call	0x392	; 0x392 <_ZN3Led3setEbbb>
     48e:	08 95       	ret
     490:	21 e0       	ldi	r18, 0x01	; 1
     492:	40 e0       	ldi	r20, 0x00	; 0
     494:	60 e0       	ldi	r22, 0x00	; 0
     496:	0e 94 c9 01 	call	0x392	; 0x392 <_ZN3Led3setEbbb>
     49a:	08 95       	ret
     49c:	21 e0       	ldi	r18, 0x01	; 1
     49e:	40 e0       	ldi	r20, 0x00	; 0
     4a0:	61 e0       	ldi	r22, 0x01	; 1
     4a2:	0e 94 c9 01 	call	0x392	; 0x392 <_ZN3Led3setEbbb>
     4a6:	08 95       	ret
     4a8:	21 e0       	ldi	r18, 0x01	; 1
     4aa:	41 e0       	ldi	r20, 0x01	; 1
     4ac:	61 e0       	ldi	r22, 0x01	; 1
     4ae:	0e 94 c9 01 	call	0x392	; 0x392 <_ZN3Led3setEbbb>
     4b2:	08 95       	ret
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	40 e0       	ldi	r20, 0x00	; 0
     4b8:	60 e0       	ldi	r22, 0x00	; 0
     4ba:	0e 94 c9 01 	call	0x392	; 0x392 <_ZN3Led3setEbbb>
     4be:	08 95       	ret
     4c0:	26 ee       	ldi	r18, 0xE6	; 230
     4c2:	4e e1       	ldi	r20, 0x1E	; 30
     4c4:	6a ef       	ldi	r22, 0xFA	; 250
     4c6:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <_ZN3Led12setIntensityEhhh>
     4ca:	08 95       	ret
     4cc:	20 e0       	ldi	r18, 0x00	; 0
     4ce:	40 e0       	ldi	r20, 0x00	; 0
     4d0:	60 e0       	ldi	r22, 0x00	; 0
     4d2:	0e 94 c9 01 	call	0x392	; 0x392 <_ZN3Led3setEbbb>
     4d6:	08 95       	ret

000004d8 <_ZN3Led12setFrequencyE5Colorih>:
	
	
	
}
void Led::setFrequency(Color color, int frequency, uint8_t seconds)
{
     4d8:	bf 92       	push	r11
     4da:	cf 92       	push	r12
     4dc:	df 92       	push	r13
     4de:	ef 92       	push	r14
     4e0:	ff 92       	push	r15
     4e2:	0f 93       	push	r16
     4e4:	1f 93       	push	r17
     4e6:	cf 93       	push	r28
     4e8:	df 93       	push	r29
     4ea:	ec 01       	movw	r28, r24
     4ec:	b6 2e       	mov	r11, r22
	if (frequency <= 0)
     4ee:	14 16       	cp	r1, r20
     4f0:	15 06       	cpc	r1, r21
     4f2:	14 f0       	brlt	.+4      	; 0x4f8 <_ZN3Led12setFrequencyE5Colorih+0x20>
	{
		frequency = 1;
     4f4:	41 e0       	ldi	r20, 0x01	; 1
     4f6:	50 e0       	ldi	r21, 0x00	; 0
	}
	int miliseconds = seconds * 1000;	
     4f8:	88 ee       	ldi	r24, 0xE8	; 232
     4fa:	93 e0       	ldi	r25, 0x03	; 3
     4fc:	28 9f       	mul	r18, r24
     4fe:	f0 01       	movw	r30, r0
     500:	29 9f       	mul	r18, r25
     502:	f0 0d       	add	r31, r0
     504:	11 24       	eor	r1, r1
	int period = 1000/frequency;
     506:	ba 01       	movw	r22, r20
     508:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <__divmodhi4>
     50c:	f6 2e       	mov	r15, r22
     50e:	e7 2e       	mov	r14, r23
	
	if (miliseconds < 2*period)
     510:	66 0f       	add	r22, r22
     512:	77 1f       	adc	r23, r23
     514:	e6 17       	cp	r30, r22
     516:	f7 07       	cpc	r31, r23
     518:	0c f4       	brge	.+2      	; 0x51c <_ZN3Led12setFrequencyE5Colorih+0x44>
	{
		miliseconds = 2*period;
     51a:	fb 01       	movw	r30, r22
	}
	int counter = miliseconds/(2*period);
     51c:	cf 01       	movw	r24, r30
     51e:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <__divmodhi4>
     522:	6b 01       	movw	r12, r22
	for (int i = 0; i < counter; i++)
     524:	00 e0       	ldi	r16, 0x00	; 0
     526:	10 e0       	ldi	r17, 0x00	; 0
     528:	0c 15       	cp	r16, r12
     52a:	1d 05       	cpc	r17, r13
     52c:	bc f4       	brge	.+46     	; 0x55c <_ZN3Led12setFrequencyE5Colorih+0x84>
	{		
		set(color);
     52e:	6b 2d       	mov	r22, r11
     530:	ce 01       	movw	r24, r28
     532:	0e 94 32 02 	call	0x464	; 0x464 <_ZN3Led3setE5Color>
		delayMs(period);
     536:	6f 2d       	mov	r22, r15
     538:	7e 2d       	mov	r23, r14
     53a:	ce 01       	movw	r24, r28
     53c:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_ZN3Led7delayMsEi>
		set(0,0,0);
     540:	20 e0       	ldi	r18, 0x00	; 0
     542:	40 e0       	ldi	r20, 0x00	; 0
     544:	60 e0       	ldi	r22, 0x00	; 0
     546:	ce 01       	movw	r24, r28
     548:	0e 94 c9 01 	call	0x392	; 0x392 <_ZN3Led3setEbbb>
		delayMs(period);
     54c:	6f 2d       	mov	r22, r15
     54e:	7e 2d       	mov	r23, r14
     550:	ce 01       	movw	r24, r28
     552:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_ZN3Led7delayMsEi>
	if (miliseconds < 2*period)
	{
		miliseconds = 2*period;
	}
	int counter = miliseconds/(2*period);
	for (int i = 0; i < counter; i++)
     556:	0f 5f       	subi	r16, 0xFF	; 255
     558:	1f 4f       	sbci	r17, 0xFF	; 255
     55a:	e6 cf       	rjmp	.-52     	; 0x528 <_ZN3Led12setFrequencyE5Colorih+0x50>
		set(color);
		delayMs(period);
		set(0,0,0);
		delayMs(period);
	}
}
     55c:	df 91       	pop	r29
     55e:	cf 91       	pop	r28
     560:	1f 91       	pop	r17
     562:	0f 91       	pop	r16
     564:	ff 90       	pop	r15
     566:	ef 90       	pop	r14
     568:	df 90       	pop	r13
     56a:	cf 90       	pop	r12
     56c:	bf 90       	pop	r11
     56e:	08 95       	ret

00000570 <_ZN3Led9findColorEc>:


Color Led::findColor(char color)
{
	Color returnColor;
	switch (color)
     570:	67 36       	cpi	r22, 0x67	; 103
     572:	49 f0       	breq	.+18     	; 0x586 <_ZN3Led9findColorEc+0x16>
     574:	18 f4       	brcc	.+6      	; 0x57c <_ZN3Led9findColorEc+0xc>
     576:	62 36       	cpi	r22, 0x62	; 98
     578:	71 f0       	breq	.+28     	; 0x596 <_ZN3Led9findColorEc+0x26>
     57a:	0b c0       	rjmp	.+22     	; 0x592 <_ZN3Led9findColorEc+0x22>
     57c:	60 37       	cpi	r22, 0x70	; 112
     57e:	39 f0       	breq	.+14     	; 0x58e <_ZN3Led9findColorEc+0x1e>
     580:	62 37       	cpi	r22, 0x72	; 114
     582:	19 f0       	breq	.+6      	; 0x58a <_ZN3Led9findColorEc+0x1a>
     584:	06 c0       	rjmp	.+12     	; 0x592 <_ZN3Led9findColorEc+0x22>
	{
		case 'g':
		returnColor = green;
     586:	81 e0       	ldi	r24, 0x01	; 1
     588:	08 95       	ret
		break;
		case 'b':
		returnColor = blue;
		break;
		case 'r':
		returnColor = red;
     58a:	80 e0       	ldi	r24, 0x00	; 0
		break;
     58c:	08 95       	ret
		case 'p':
		returnColor = purple;
     58e:	83 e0       	ldi	r24, 0x03	; 3
		break;
     590:	08 95       	ret
		default:
		returnColor = white;
     592:	84 e0       	ldi	r24, 0x04	; 4
		break;
     594:	08 95       	ret
	{
		case 'g':
		returnColor = green;
		break;
		case 'b':
		returnColor = blue;
     596:	82 e0       	ldi	r24, 0x02	; 2
		default:
		returnColor = white;
		break;
	}
	return returnColor;
     598:	08 95       	ret

0000059a <main>:
#include "Usart.h"
#include "DSTSensor.h"
#include "Eeprom.h"

int main(void)
{
     59a:	cf 93       	push	r28
     59c:	df 93       	push	r29
     59e:	cd b7       	in	r28, 0x3d	; 61
     5a0:	de b7       	in	r29, 0x3e	; 62
     5a2:	27 97       	sbiw	r28, 0x07	; 7
     5a4:	0f b6       	in	r0, 0x3f	; 63
     5a6:	f8 94       	cli
     5a8:	de bf       	out	0x3e, r29	; 62
     5aa:	0f be       	out	0x3f, r0	; 63
     5ac:	cd bf       	out	0x3d, r28	; 61
	Led rgb;					// create object of class Led	
     5ae:	ce 01       	movw	r24, r28
     5b0:	01 96       	adiw	r24, 0x01	; 1
     5b2:	0e 94 9b 01 	call	0x336	; 0x336 <_ZN3LedC1Ev>
	Display dsp;				// create object of class Display
     5b6:	ce 01       	movw	r24, r28
     5b8:	02 96       	adiw	r24, 0x02	; 2
     5ba:	0e 94 de 00 	call	0x1bc	; 0x1bc <_ZN7DisplayC1Ev>
	Usart uart;					// create object of class Uart
     5be:	ce 01       	movw	r24, r28
     5c0:	03 96       	adiw	r24, 0x03	; 3
     5c2:	0e 94 50 03 	call	0x6a0	; 0x6a0 <_ZN5UsartC1Ev>
	Btn btn;					// create object of class Button
     5c6:	ce 01       	movw	r24, r28
     5c8:	05 96       	adiw	r24, 0x05	; 5
     5ca:	0e 94 6c 00 	call	0xd8	; 0xd8 <_ZN3BtnC1Ev>
	DSTSensor dst;				// create object of class DSTSensor
     5ce:	ce 01       	movw	r24, r28
     5d0:	06 96       	adiw	r24, 0x06	; 6
     5d2:	0e 94 42 01 	call	0x284	; 0x284 <_ZN9DSTSensorC1Ev>
	Eeprom eeprom;				// create object of class Eeprom
     5d6:	ce 01       	movw	r24, r28
     5d8:	07 96       	adiw	r24, 0x07	; 7
     5da:	0e 94 65 01 	call	0x2ca	; 0x2ca <_ZN6EepromC1Ev>
	
	printf("----------------START PROGRAMU---------------------\r\n");
     5de:	82 e2       	ldi	r24, 0x22	; 34
     5e0:	91 e0       	ldi	r25, 0x01	; 1
     5e2:	0e 94 67 04 	call	0x8ce	; 0x8ce <puts>
	Color color;
	btn.initInterrupt(fall);
     5e6:	62 e0       	ldi	r22, 0x02	; 2
     5e8:	ce 01       	movw	r24, r28
     5ea:	05 96       	adiw	r24, 0x05	; 5
     5ec:	0e 94 79 00 	call	0xf2	; 0xf2 <_ZN3Btn13initInterruptE9externInt>
	eeprom.setColors();
     5f0:	ce 01       	movw	r24, r28
     5f2:	07 96       	adiw	r24, 0x07	; 7
     5f4:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_ZN6Eeprom9setColorsEv>
	char colorEeeprom = 0;
	int freq = 1;
	int distance = 0;
	sei();						// global interrupt enable
     5f8:	78 94       	sei
	while(1){
		colorEeeprom = eeprom.Read(ADD_COLOR);
     5fa:	80 e0       	ldi	r24, 0x00	; 0
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	0e 94 92 01 	call	0x324	; 0x324 <_ZN6Eeprom4ReadEj>
		color = rgb.findColor(colorEeeprom);
     602:	68 2f       	mov	r22, r24
     604:	ce 01       	movw	r24, r28
     606:	01 96       	adiw	r24, 0x01	; 1
     608:	0e 94 b8 02 	call	0x570	; 0x570 <_ZN3Led9findColorEc>
     60c:	d8 2e       	mov	r13, r24
		distance = dst.getDistance();		
     60e:	ce 01       	movw	r24, r28
     610:	06 96       	adiw	r24, 0x06	; 6
     612:	0e 94 49 01 	call	0x292	; 0x292 <_ZN9DSTSensor11getDistanceEv>
     616:	28 2f       	mov	r18, r24
     618:	39 2f       	mov	r19, r25
		freq = MAX_DIST_CM/distance;
     61a:	8a ef       	ldi	r24, 0xFA	; 250
     61c:	90 e0       	ldi	r25, 0x00	; 0
     61e:	62 2f       	mov	r22, r18
     620:	73 2f       	mov	r23, r19
     622:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <__divmodhi4>
     626:	16 2f       	mov	r17, r22
     628:	07 2f       	mov	r16, r23
     62a:	e6 2e       	mov	r14, r22
     62c:	f7 2e       	mov	r15, r23
		printf("Distance is %d cm, frequency of led is %d Hz\r\n", distance, freq);
     62e:	7f 93       	push	r23
     630:	6f 93       	push	r22
     632:	3f 93       	push	r19
     634:	2f 93       	push	r18
     636:	87 e5       	ldi	r24, 0x57	; 87
     638:	91 e0       	ldi	r25, 0x01	; 1
     63a:	9f 93       	push	r25
     63c:	8f 93       	push	r24
     63e:	0e 94 51 04 	call	0x8a2	; 0x8a2 <printf>
		if (freq <= 15)
     642:	0f 90       	pop	r0
     644:	0f 90       	pop	r0
     646:	0f 90       	pop	r0
     648:	0f 90       	pop	r0
     64a:	0f 90       	pop	r0
     64c:	0f 90       	pop	r0
     64e:	80 e1       	ldi	r24, 0x10	; 16
     650:	e8 16       	cp	r14, r24
     652:	f1 04       	cpc	r15, r1
     654:	34 f4       	brge	.+12     	; 0x662 <main+0xc8>
		{
			dsp.Show(freq);
     656:	61 2f       	mov	r22, r17
     658:	ce 01       	movw	r24, r28
     65a:	02 96       	adiw	r24, 0x02	; 2
     65c:	0e 94 10 01 	call	0x220	; 0x220 <_ZN7Display4ShowEh>
     660:	05 c0       	rjmp	.+10     	; 0x66c <main+0xd2>
		}else
		{
			dsp.Show(16);
     662:	60 e1       	ldi	r22, 0x10	; 16
     664:	ce 01       	movw	r24, r28
     666:	02 96       	adiw	r24, 0x02	; 2
     668:	0e 94 10 01 	call	0x220	; 0x220 <_ZN7Display4ShowEh>
		}
		
		rgb.setFrequency(color,freq,1);
     66c:	21 e0       	ldi	r18, 0x01	; 1
     66e:	41 2f       	mov	r20, r17
     670:	50 2f       	mov	r21, r16
     672:	6d 2d       	mov	r22, r13
     674:	ce 01       	movw	r24, r28
     676:	01 96       	adiw	r24, 0x01	; 1
     678:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <_ZN3Led12setFrequencyE5Colorih>
	eeprom.setColors();
	char colorEeeprom = 0;
	int freq = 1;
	int distance = 0;
	sei();						// global interrupt enable
	while(1){
     67c:	be cf       	rjmp	.-132    	; 0x5fa <main+0x60>

0000067e <_ZN5Usart10hwSendByteEcP6__file>:
	sbi(UCSR0A, RXC0 );
	
} //Uart

// default destructor
Usart::~Usart()
     67e:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     682:	95 ff       	sbrs	r25, 5
     684:	fc cf       	rjmp	.-8      	; 0x67e <_ZN5Usart10hwSendByteEcP6__file>
     686:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     68a:	80 e0       	ldi	r24, 0x00	; 0
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	08 95       	ret

00000690 <_ZN5Usart13hwReceiveByteEP6__file>:
     690:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     694:	88 23       	and	r24, r24
     696:	e4 f7       	brge	.-8      	; 0x690 <_ZN5Usart13hwReceiveByteEP6__file>
     698:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	08 95       	ret

000006a0 <_ZN5UsartC1Ev>:
     6a0:	ef 92       	push	r14
     6a2:	ff 92       	push	r15
     6a4:	0f 93       	push	r16
     6a6:	1f 93       	push	r17
     6a8:	cf 93       	push	r28
     6aa:	df 93       	push	r29
     6ac:	1f 92       	push	r1
     6ae:	cd b7       	in	r28, 0x3d	; 61
     6b0:	de b7       	in	r29, 0x3e	; 62
     6b2:	7c 01       	movw	r14, r24
     6b4:	ce 01       	movw	r24, r28
     6b6:	01 96       	adiw	r24, 0x01	; 1
     6b8:	0e 94 65 01 	call	0x2ca	; 0x2ca <_ZN6EepromC1Ev>
     6bc:	60 e0       	ldi	r22, 0x00	; 0
     6be:	81 e0       	ldi	r24, 0x01	; 1
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN6Eeprom5WriteEjh>
     6c6:	8a b1       	in	r24, 0x0a	; 10
     6c8:	82 60       	ori	r24, 0x02	; 2
     6ca:	8a b9       	out	0x0a, r24	; 10
     6cc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     6d0:	8d e4       	ldi	r24, 0x4D	; 77
     6d2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     6d6:	e2 ec       	ldi	r30, 0xC2	; 194
     6d8:	f0 e0       	ldi	r31, 0x00	; 0
     6da:	80 81       	ld	r24, Z
     6dc:	86 60       	ori	r24, 0x06	; 6
     6de:	80 83       	st	Z, r24
     6e0:	01 ec       	ldi	r16, 0xC1	; 193
     6e2:	10 e0       	ldi	r17, 0x00	; 0
     6e4:	f8 01       	movw	r30, r16
     6e6:	80 81       	ld	r24, Z
     6e8:	88 61       	ori	r24, 0x18	; 24
     6ea:	80 83       	st	Z, r24
     6ec:	68 e4       	ldi	r22, 0x48	; 72
     6ee:	73 e0       	ldi	r23, 0x03	; 3
     6f0:	8f e3       	ldi	r24, 0x3F	; 63
     6f2:	93 e0       	ldi	r25, 0x03	; 3
     6f4:	0e 94 06 04 	call	0x80c	; 0x80c <fdevopen>
     6f8:	f7 01       	movw	r30, r14
     6fa:	91 83       	std	Z+1, r25	; 0x01
     6fc:	80 83       	st	Z, r24
     6fe:	ea e9       	ldi	r30, 0x9A	; 154
     700:	f1 e0       	ldi	r31, 0x01	; 1
     702:	91 83       	std	Z+1, r25	; 0x01
     704:	80 83       	st	Z, r24
     706:	93 83       	std	Z+3, r25	; 0x03
     708:	82 83       	std	Z+2, r24	; 0x02
     70a:	f8 01       	movw	r30, r16
     70c:	80 81       	ld	r24, Z
     70e:	80 68       	ori	r24, 0x80	; 128
     710:	80 83       	st	Z, r24
     712:	e0 ec       	ldi	r30, 0xC0	; 192
     714:	f0 e0       	ldi	r31, 0x00	; 0
     716:	80 81       	ld	r24, Z
     718:	80 68       	ori	r24, 0x80	; 128
     71a:	80 83       	st	Z, r24
     71c:	ce 01       	movw	r24, r28
     71e:	01 96       	adiw	r24, 0x01	; 1
     720:	0e 94 66 01 	call	0x2cc	; 0x2cc <_ZN6EepromD1Ev>
     724:	0f 90       	pop	r0
     726:	df 91       	pop	r29
     728:	cf 91       	pop	r28
     72a:	1f 91       	pop	r17
     72c:	0f 91       	pop	r16
     72e:	ff 90       	pop	r15
     730:	ef 90       	pop	r14
     732:	08 95       	ret

00000734 <__vector_18>:
	return data;
}
/*********************************************************************************************************************************/

ISR(USART_RX_vect)
{
     734:	1f 92       	push	r1
     736:	0f 92       	push	r0
     738:	0f b6       	in	r0, 0x3f	; 63
     73a:	0f 92       	push	r0
     73c:	11 24       	eor	r1, r1
     73e:	2f 93       	push	r18
     740:	3f 93       	push	r19
     742:	4f 93       	push	r20
     744:	5f 93       	push	r21
     746:	6f 93       	push	r22
     748:	7f 93       	push	r23
     74a:	8f 93       	push	r24
     74c:	9f 93       	push	r25
     74e:	af 93       	push	r26
     750:	bf 93       	push	r27
     752:	ef 93       	push	r30
     754:	ff 93       	push	r31
     756:	cf 93       	push	r28
     758:	df 93       	push	r29
     75a:	1f 92       	push	r1
     75c:	cd b7       	in	r28, 0x3d	; 61
     75e:	de b7       	in	r29, 0x3e	; 62
	cli();
     760:	f8 94       	cli
	Eeprom eeprom;
     762:	ce 01       	movw	r24, r28
     764:	01 96       	adiw	r24, 0x01	; 1
     766:	0e 94 65 01 	call	0x2ca	; 0x2ca <_ZN6EepromC1Ev>
	char pismeno;
	pismeno = UDR0;
     76a:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	eeprom.Write(0, pismeno);
     76e:	80 e0       	ldi	r24, 0x00	; 0
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN6Eeprom5WriteEjh>
	printf("Farba sa zmenila\r\n");		//vypiseme znak ktory sa precital
     776:	86 e8       	ldi	r24, 0x86	; 134
     778:	91 e0       	ldi	r25, 0x01	; 1
     77a:	0e 94 67 04 	call	0x8ce	; 0x8ce <puts>
	sei();
     77e:	78 94       	sei
/*********************************************************************************************************************************/

ISR(USART_RX_vect)
{
	cli();
	Eeprom eeprom;
     780:	ce 01       	movw	r24, r28
     782:	01 96       	adiw	r24, 0x01	; 1
     784:	0e 94 66 01 	call	0x2cc	; 0x2cc <_ZN6EepromD1Ev>
	printf("Farba sa zmenila\r\n");		//vypiseme znak ktory sa precital
	sei();
	//pismeno = UDR0;						//neviem preco ale bluetooth cita znak 3x ???
	//pismeno = UDR0;
	
     788:	0f 90       	pop	r0
     78a:	df 91       	pop	r29
     78c:	cf 91       	pop	r28
     78e:	ff 91       	pop	r31
     790:	ef 91       	pop	r30
     792:	bf 91       	pop	r27
     794:	af 91       	pop	r26
     796:	9f 91       	pop	r25
     798:	8f 91       	pop	r24
     79a:	7f 91       	pop	r23
     79c:	6f 91       	pop	r22
     79e:	5f 91       	pop	r21
     7a0:	4f 91       	pop	r20
     7a2:	3f 91       	pop	r19
     7a4:	2f 91       	pop	r18
     7a6:	0f 90       	pop	r0
     7a8:	0f be       	out	0x3f, r0	; 63
     7aa:	0f 90       	pop	r0
     7ac:	1f 90       	pop	r1
     7ae:	18 95       	reti

000007b0 <__divmodhi4>:
     7b0:	97 fb       	bst	r25, 7
     7b2:	07 2e       	mov	r0, r23
     7b4:	16 f4       	brtc	.+4      	; 0x7ba <__divmodhi4+0xa>
     7b6:	00 94       	com	r0
     7b8:	07 d0       	rcall	.+14     	; 0x7c8 <__divmodhi4_neg1>
     7ba:	77 fd       	sbrc	r23, 7
     7bc:	09 d0       	rcall	.+18     	; 0x7d0 <__divmodhi4_neg2>
     7be:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <__udivmodhi4>
     7c2:	07 fc       	sbrc	r0, 7
     7c4:	05 d0       	rcall	.+10     	; 0x7d0 <__divmodhi4_neg2>
     7c6:	3e f4       	brtc	.+14     	; 0x7d6 <__divmodhi4_exit>

000007c8 <__divmodhi4_neg1>:
     7c8:	90 95       	com	r25
     7ca:	81 95       	neg	r24
     7cc:	9f 4f       	sbci	r25, 0xFF	; 255
     7ce:	08 95       	ret

000007d0 <__divmodhi4_neg2>:
     7d0:	70 95       	com	r23
     7d2:	61 95       	neg	r22
     7d4:	7f 4f       	sbci	r23, 0xFF	; 255

000007d6 <__divmodhi4_exit>:
     7d6:	08 95       	ret

000007d8 <__tablejump2__>:
     7d8:	ee 0f       	add	r30, r30
     7da:	ff 1f       	adc	r31, r31
     7dc:	05 90       	lpm	r0, Z+
     7de:	f4 91       	lpm	r31, Z
     7e0:	e0 2d       	mov	r30, r0
     7e2:	09 94       	ijmp

000007e4 <__udivmodhi4>:
     7e4:	aa 1b       	sub	r26, r26
     7e6:	bb 1b       	sub	r27, r27
     7e8:	51 e1       	ldi	r21, 0x11	; 17
     7ea:	07 c0       	rjmp	.+14     	; 0x7fa <__udivmodhi4_ep>

000007ec <__udivmodhi4_loop>:
     7ec:	aa 1f       	adc	r26, r26
     7ee:	bb 1f       	adc	r27, r27
     7f0:	a6 17       	cp	r26, r22
     7f2:	b7 07       	cpc	r27, r23
     7f4:	10 f0       	brcs	.+4      	; 0x7fa <__udivmodhi4_ep>
     7f6:	a6 1b       	sub	r26, r22
     7f8:	b7 0b       	sbc	r27, r23

000007fa <__udivmodhi4_ep>:
     7fa:	88 1f       	adc	r24, r24
     7fc:	99 1f       	adc	r25, r25
     7fe:	5a 95       	dec	r21
     800:	a9 f7       	brne	.-22     	; 0x7ec <__udivmodhi4_loop>
     802:	80 95       	com	r24
     804:	90 95       	com	r25
     806:	bc 01       	movw	r22, r24
     808:	cd 01       	movw	r24, r26
     80a:	08 95       	ret

0000080c <fdevopen>:
     80c:	0f 93       	push	r16
     80e:	1f 93       	push	r17
     810:	cf 93       	push	r28
     812:	df 93       	push	r29
     814:	00 97       	sbiw	r24, 0x00	; 0
     816:	31 f4       	brne	.+12     	; 0x824 <fdevopen+0x18>
     818:	61 15       	cp	r22, r1
     81a:	71 05       	cpc	r23, r1
     81c:	19 f4       	brne	.+6      	; 0x824 <fdevopen+0x18>
     81e:	80 e0       	ldi	r24, 0x00	; 0
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	3a c0       	rjmp	.+116    	; 0x898 <fdevopen+0x8c>
     824:	8b 01       	movw	r16, r22
     826:	ec 01       	movw	r28, r24
     828:	6e e0       	ldi	r22, 0x0E	; 14
     82a:	70 e0       	ldi	r23, 0x00	; 0
     82c:	81 e0       	ldi	r24, 0x01	; 1
     82e:	90 e0       	ldi	r25, 0x00	; 0
     830:	0e 94 78 06 	call	0xcf0	; 0xcf0 <calloc>
     834:	fc 01       	movw	r30, r24
     836:	89 2b       	or	r24, r25
     838:	91 f3       	breq	.-28     	; 0x81e <fdevopen+0x12>
     83a:	80 e8       	ldi	r24, 0x80	; 128
     83c:	83 83       	std	Z+3, r24	; 0x03
     83e:	01 15       	cp	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	71 f0       	breq	.+28     	; 0x860 <fdevopen+0x54>
     844:	13 87       	std	Z+11, r17	; 0x0b
     846:	02 87       	std	Z+10, r16	; 0x0a
     848:	81 e8       	ldi	r24, 0x81	; 129
     84a:	83 83       	std	Z+3, r24	; 0x03
     84c:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <__iob>
     850:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <__iob+0x1>
     854:	89 2b       	or	r24, r25
     856:	21 f4       	brne	.+8      	; 0x860 <fdevopen+0x54>
     858:	f0 93 9b 01 	sts	0x019B, r31	; 0x80019b <__iob+0x1>
     85c:	e0 93 9a 01 	sts	0x019A, r30	; 0x80019a <__iob>
     860:	20 97       	sbiw	r28, 0x00	; 0
     862:	c9 f0       	breq	.+50     	; 0x896 <fdevopen+0x8a>
     864:	d1 87       	std	Z+9, r29	; 0x09
     866:	c0 87       	std	Z+8, r28	; 0x08
     868:	83 81       	ldd	r24, Z+3	; 0x03
     86a:	82 60       	ori	r24, 0x02	; 2
     86c:	83 83       	std	Z+3, r24	; 0x03
     86e:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <__iob+0x2>
     872:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <__iob+0x3>
     876:	89 2b       	or	r24, r25
     878:	71 f4       	brne	.+28     	; 0x896 <fdevopen+0x8a>
     87a:	f0 93 9d 01 	sts	0x019D, r31	; 0x80019d <__iob+0x3>
     87e:	e0 93 9c 01 	sts	0x019C, r30	; 0x80019c <__iob+0x2>
     882:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <__iob+0x4>
     886:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <__iob+0x5>
     88a:	89 2b       	or	r24, r25
     88c:	21 f4       	brne	.+8      	; 0x896 <fdevopen+0x8a>
     88e:	f0 93 9f 01 	sts	0x019F, r31	; 0x80019f <__iob+0x5>
     892:	e0 93 9e 01 	sts	0x019E, r30	; 0x80019e <__iob+0x4>
     896:	cf 01       	movw	r24, r30
     898:	df 91       	pop	r29
     89a:	cf 91       	pop	r28
     89c:	1f 91       	pop	r17
     89e:	0f 91       	pop	r16
     8a0:	08 95       	ret

000008a2 <printf>:
     8a2:	a0 e0       	ldi	r26, 0x00	; 0
     8a4:	b0 e0       	ldi	r27, 0x00	; 0
     8a6:	e7 e5       	ldi	r30, 0x57	; 87
     8a8:	f4 e0       	ldi	r31, 0x04	; 4
     8aa:	0c 94 7c 08 	jmp	0x10f8	; 0x10f8 <__prologue_saves__+0x20>
     8ae:	ae 01       	movw	r20, r28
     8b0:	4b 5f       	subi	r20, 0xFB	; 251
     8b2:	5f 4f       	sbci	r21, 0xFF	; 255
     8b4:	fa 01       	movw	r30, r20
     8b6:	61 91       	ld	r22, Z+
     8b8:	71 91       	ld	r23, Z+
     8ba:	af 01       	movw	r20, r30
     8bc:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <__iob+0x2>
     8c0:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <__iob+0x3>
     8c4:	0e 94 97 04 	call	0x92e	; 0x92e <vfprintf>
     8c8:	e2 e0       	ldi	r30, 0x02	; 2
     8ca:	0c 94 98 08 	jmp	0x1130	; 0x1130 <__epilogue_restores__+0x20>

000008ce <puts>:
     8ce:	0f 93       	push	r16
     8d0:	1f 93       	push	r17
     8d2:	cf 93       	push	r28
     8d4:	df 93       	push	r29
     8d6:	e0 91 9c 01 	lds	r30, 0x019C	; 0x80019c <__iob+0x2>
     8da:	f0 91 9d 01 	lds	r31, 0x019D	; 0x80019d <__iob+0x3>
     8de:	23 81       	ldd	r18, Z+3	; 0x03
     8e0:	21 ff       	sbrs	r18, 1
     8e2:	1b c0       	rjmp	.+54     	; 0x91a <__stack+0x1b>
     8e4:	8c 01       	movw	r16, r24
     8e6:	d0 e0       	ldi	r29, 0x00	; 0
     8e8:	c0 e0       	ldi	r28, 0x00	; 0
     8ea:	f8 01       	movw	r30, r16
     8ec:	81 91       	ld	r24, Z+
     8ee:	8f 01       	movw	r16, r30
     8f0:	60 91 9c 01 	lds	r22, 0x019C	; 0x80019c <__iob+0x2>
     8f4:	70 91 9d 01 	lds	r23, 0x019D	; 0x80019d <__iob+0x3>
     8f8:	db 01       	movw	r26, r22
     8fa:	18 96       	adiw	r26, 0x08	; 8
     8fc:	ed 91       	ld	r30, X+
     8fe:	fc 91       	ld	r31, X
     900:	19 97       	sbiw	r26, 0x09	; 9
     902:	88 23       	and	r24, r24
     904:	31 f0       	breq	.+12     	; 0x912 <__stack+0x13>
     906:	09 95       	icall
     908:	89 2b       	or	r24, r25
     90a:	79 f3       	breq	.-34     	; 0x8ea <puts+0x1c>
     90c:	df ef       	ldi	r29, 0xFF	; 255
     90e:	cf ef       	ldi	r28, 0xFF	; 255
     910:	ec cf       	rjmp	.-40     	; 0x8ea <puts+0x1c>
     912:	8a e0       	ldi	r24, 0x0A	; 10
     914:	09 95       	icall
     916:	89 2b       	or	r24, r25
     918:	19 f0       	breq	.+6      	; 0x920 <__stack+0x21>
     91a:	8f ef       	ldi	r24, 0xFF	; 255
     91c:	9f ef       	ldi	r25, 0xFF	; 255
     91e:	02 c0       	rjmp	.+4      	; 0x924 <__stack+0x25>
     920:	8d 2f       	mov	r24, r29
     922:	9c 2f       	mov	r25, r28
     924:	df 91       	pop	r29
     926:	cf 91       	pop	r28
     928:	1f 91       	pop	r17
     92a:	0f 91       	pop	r16
     92c:	08 95       	ret

0000092e <vfprintf>:
     92e:	ab e0       	ldi	r26, 0x0B	; 11
     930:	b0 e0       	ldi	r27, 0x00	; 0
     932:	ed e9       	ldi	r30, 0x9D	; 157
     934:	f4 e0       	ldi	r31, 0x04	; 4
     936:	0c 94 6c 08 	jmp	0x10d8	; 0x10d8 <__prologue_saves__>
     93a:	6c 01       	movw	r12, r24
     93c:	7b 01       	movw	r14, r22
     93e:	8a 01       	movw	r16, r20
     940:	fc 01       	movw	r30, r24
     942:	17 82       	std	Z+7, r1	; 0x07
     944:	16 82       	std	Z+6, r1	; 0x06
     946:	83 81       	ldd	r24, Z+3	; 0x03
     948:	81 ff       	sbrs	r24, 1
     94a:	cc c1       	rjmp	.+920    	; 0xce4 <vfprintf+0x3b6>
     94c:	ce 01       	movw	r24, r28
     94e:	01 96       	adiw	r24, 0x01	; 1
     950:	3c 01       	movw	r6, r24
     952:	f6 01       	movw	r30, r12
     954:	93 81       	ldd	r25, Z+3	; 0x03
     956:	f7 01       	movw	r30, r14
     958:	93 fd       	sbrc	r25, 3
     95a:	85 91       	lpm	r24, Z+
     95c:	93 ff       	sbrs	r25, 3
     95e:	81 91       	ld	r24, Z+
     960:	7f 01       	movw	r14, r30
     962:	88 23       	and	r24, r24
     964:	09 f4       	brne	.+2      	; 0x968 <vfprintf+0x3a>
     966:	ba c1       	rjmp	.+884    	; 0xcdc <vfprintf+0x3ae>
     968:	85 32       	cpi	r24, 0x25	; 37
     96a:	39 f4       	brne	.+14     	; 0x97a <vfprintf+0x4c>
     96c:	93 fd       	sbrc	r25, 3
     96e:	85 91       	lpm	r24, Z+
     970:	93 ff       	sbrs	r25, 3
     972:	81 91       	ld	r24, Z+
     974:	7f 01       	movw	r14, r30
     976:	85 32       	cpi	r24, 0x25	; 37
     978:	29 f4       	brne	.+10     	; 0x984 <vfprintf+0x56>
     97a:	b6 01       	movw	r22, r12
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <fputc>
     982:	e7 cf       	rjmp	.-50     	; 0x952 <vfprintf+0x24>
     984:	91 2c       	mov	r9, r1
     986:	21 2c       	mov	r2, r1
     988:	31 2c       	mov	r3, r1
     98a:	ff e1       	ldi	r31, 0x1F	; 31
     98c:	f3 15       	cp	r31, r3
     98e:	d8 f0       	brcs	.+54     	; 0x9c6 <vfprintf+0x98>
     990:	8b 32       	cpi	r24, 0x2B	; 43
     992:	79 f0       	breq	.+30     	; 0x9b2 <vfprintf+0x84>
     994:	38 f4       	brcc	.+14     	; 0x9a4 <vfprintf+0x76>
     996:	80 32       	cpi	r24, 0x20	; 32
     998:	79 f0       	breq	.+30     	; 0x9b8 <vfprintf+0x8a>
     99a:	83 32       	cpi	r24, 0x23	; 35
     99c:	a1 f4       	brne	.+40     	; 0x9c6 <vfprintf+0x98>
     99e:	23 2d       	mov	r18, r3
     9a0:	20 61       	ori	r18, 0x10	; 16
     9a2:	1d c0       	rjmp	.+58     	; 0x9de <vfprintf+0xb0>
     9a4:	8d 32       	cpi	r24, 0x2D	; 45
     9a6:	61 f0       	breq	.+24     	; 0x9c0 <vfprintf+0x92>
     9a8:	80 33       	cpi	r24, 0x30	; 48
     9aa:	69 f4       	brne	.+26     	; 0x9c6 <vfprintf+0x98>
     9ac:	23 2d       	mov	r18, r3
     9ae:	21 60       	ori	r18, 0x01	; 1
     9b0:	16 c0       	rjmp	.+44     	; 0x9de <vfprintf+0xb0>
     9b2:	83 2d       	mov	r24, r3
     9b4:	82 60       	ori	r24, 0x02	; 2
     9b6:	38 2e       	mov	r3, r24
     9b8:	e3 2d       	mov	r30, r3
     9ba:	e4 60       	ori	r30, 0x04	; 4
     9bc:	3e 2e       	mov	r3, r30
     9be:	2a c0       	rjmp	.+84     	; 0xa14 <vfprintf+0xe6>
     9c0:	f3 2d       	mov	r31, r3
     9c2:	f8 60       	ori	r31, 0x08	; 8
     9c4:	1d c0       	rjmp	.+58     	; 0xa00 <vfprintf+0xd2>
     9c6:	37 fc       	sbrc	r3, 7
     9c8:	2d c0       	rjmp	.+90     	; 0xa24 <vfprintf+0xf6>
     9ca:	20 ed       	ldi	r18, 0xD0	; 208
     9cc:	28 0f       	add	r18, r24
     9ce:	2a 30       	cpi	r18, 0x0A	; 10
     9d0:	40 f0       	brcs	.+16     	; 0x9e2 <vfprintf+0xb4>
     9d2:	8e 32       	cpi	r24, 0x2E	; 46
     9d4:	b9 f4       	brne	.+46     	; 0xa04 <vfprintf+0xd6>
     9d6:	36 fc       	sbrc	r3, 6
     9d8:	81 c1       	rjmp	.+770    	; 0xcdc <vfprintf+0x3ae>
     9da:	23 2d       	mov	r18, r3
     9dc:	20 64       	ori	r18, 0x40	; 64
     9de:	32 2e       	mov	r3, r18
     9e0:	19 c0       	rjmp	.+50     	; 0xa14 <vfprintf+0xe6>
     9e2:	36 fe       	sbrs	r3, 6
     9e4:	06 c0       	rjmp	.+12     	; 0x9f2 <vfprintf+0xc4>
     9e6:	8a e0       	ldi	r24, 0x0A	; 10
     9e8:	98 9e       	mul	r9, r24
     9ea:	20 0d       	add	r18, r0
     9ec:	11 24       	eor	r1, r1
     9ee:	92 2e       	mov	r9, r18
     9f0:	11 c0       	rjmp	.+34     	; 0xa14 <vfprintf+0xe6>
     9f2:	ea e0       	ldi	r30, 0x0A	; 10
     9f4:	2e 9e       	mul	r2, r30
     9f6:	20 0d       	add	r18, r0
     9f8:	11 24       	eor	r1, r1
     9fa:	22 2e       	mov	r2, r18
     9fc:	f3 2d       	mov	r31, r3
     9fe:	f0 62       	ori	r31, 0x20	; 32
     a00:	3f 2e       	mov	r3, r31
     a02:	08 c0       	rjmp	.+16     	; 0xa14 <vfprintf+0xe6>
     a04:	8c 36       	cpi	r24, 0x6C	; 108
     a06:	21 f4       	brne	.+8      	; 0xa10 <vfprintf+0xe2>
     a08:	83 2d       	mov	r24, r3
     a0a:	80 68       	ori	r24, 0x80	; 128
     a0c:	38 2e       	mov	r3, r24
     a0e:	02 c0       	rjmp	.+4      	; 0xa14 <vfprintf+0xe6>
     a10:	88 36       	cpi	r24, 0x68	; 104
     a12:	41 f4       	brne	.+16     	; 0xa24 <vfprintf+0xf6>
     a14:	f7 01       	movw	r30, r14
     a16:	93 fd       	sbrc	r25, 3
     a18:	85 91       	lpm	r24, Z+
     a1a:	93 ff       	sbrs	r25, 3
     a1c:	81 91       	ld	r24, Z+
     a1e:	7f 01       	movw	r14, r30
     a20:	81 11       	cpse	r24, r1
     a22:	b3 cf       	rjmp	.-154    	; 0x98a <vfprintf+0x5c>
     a24:	98 2f       	mov	r25, r24
     a26:	9f 7d       	andi	r25, 0xDF	; 223
     a28:	95 54       	subi	r25, 0x45	; 69
     a2a:	93 30       	cpi	r25, 0x03	; 3
     a2c:	28 f4       	brcc	.+10     	; 0xa38 <vfprintf+0x10a>
     a2e:	0c 5f       	subi	r16, 0xFC	; 252
     a30:	1f 4f       	sbci	r17, 0xFF	; 255
     a32:	9f e3       	ldi	r25, 0x3F	; 63
     a34:	99 83       	std	Y+1, r25	; 0x01
     a36:	0d c0       	rjmp	.+26     	; 0xa52 <vfprintf+0x124>
     a38:	83 36       	cpi	r24, 0x63	; 99
     a3a:	31 f0       	breq	.+12     	; 0xa48 <vfprintf+0x11a>
     a3c:	83 37       	cpi	r24, 0x73	; 115
     a3e:	71 f0       	breq	.+28     	; 0xa5c <vfprintf+0x12e>
     a40:	83 35       	cpi	r24, 0x53	; 83
     a42:	09 f0       	breq	.+2      	; 0xa46 <vfprintf+0x118>
     a44:	59 c0       	rjmp	.+178    	; 0xaf8 <vfprintf+0x1ca>
     a46:	21 c0       	rjmp	.+66     	; 0xa8a <vfprintf+0x15c>
     a48:	f8 01       	movw	r30, r16
     a4a:	80 81       	ld	r24, Z
     a4c:	89 83       	std	Y+1, r24	; 0x01
     a4e:	0e 5f       	subi	r16, 0xFE	; 254
     a50:	1f 4f       	sbci	r17, 0xFF	; 255
     a52:	88 24       	eor	r8, r8
     a54:	83 94       	inc	r8
     a56:	91 2c       	mov	r9, r1
     a58:	53 01       	movw	r10, r6
     a5a:	13 c0       	rjmp	.+38     	; 0xa82 <vfprintf+0x154>
     a5c:	28 01       	movw	r4, r16
     a5e:	f2 e0       	ldi	r31, 0x02	; 2
     a60:	4f 0e       	add	r4, r31
     a62:	51 1c       	adc	r5, r1
     a64:	f8 01       	movw	r30, r16
     a66:	a0 80       	ld	r10, Z
     a68:	b1 80       	ldd	r11, Z+1	; 0x01
     a6a:	36 fe       	sbrs	r3, 6
     a6c:	03 c0       	rjmp	.+6      	; 0xa74 <vfprintf+0x146>
     a6e:	69 2d       	mov	r22, r9
     a70:	70 e0       	ldi	r23, 0x00	; 0
     a72:	02 c0       	rjmp	.+4      	; 0xa78 <vfprintf+0x14a>
     a74:	6f ef       	ldi	r22, 0xFF	; 255
     a76:	7f ef       	ldi	r23, 0xFF	; 255
     a78:	c5 01       	movw	r24, r10
     a7a:	0e 94 c7 07 	call	0xf8e	; 0xf8e <strnlen>
     a7e:	4c 01       	movw	r8, r24
     a80:	82 01       	movw	r16, r4
     a82:	f3 2d       	mov	r31, r3
     a84:	ff 77       	andi	r31, 0x7F	; 127
     a86:	3f 2e       	mov	r3, r31
     a88:	16 c0       	rjmp	.+44     	; 0xab6 <vfprintf+0x188>
     a8a:	28 01       	movw	r4, r16
     a8c:	22 e0       	ldi	r18, 0x02	; 2
     a8e:	42 0e       	add	r4, r18
     a90:	51 1c       	adc	r5, r1
     a92:	f8 01       	movw	r30, r16
     a94:	a0 80       	ld	r10, Z
     a96:	b1 80       	ldd	r11, Z+1	; 0x01
     a98:	36 fe       	sbrs	r3, 6
     a9a:	03 c0       	rjmp	.+6      	; 0xaa2 <vfprintf+0x174>
     a9c:	69 2d       	mov	r22, r9
     a9e:	70 e0       	ldi	r23, 0x00	; 0
     aa0:	02 c0       	rjmp	.+4      	; 0xaa6 <vfprintf+0x178>
     aa2:	6f ef       	ldi	r22, 0xFF	; 255
     aa4:	7f ef       	ldi	r23, 0xFF	; 255
     aa6:	c5 01       	movw	r24, r10
     aa8:	0e 94 b5 07 	call	0xf6a	; 0xf6a <strnlen_P>
     aac:	4c 01       	movw	r8, r24
     aae:	f3 2d       	mov	r31, r3
     ab0:	f0 68       	ori	r31, 0x80	; 128
     ab2:	3f 2e       	mov	r3, r31
     ab4:	82 01       	movw	r16, r4
     ab6:	33 fc       	sbrc	r3, 3
     ab8:	1b c0       	rjmp	.+54     	; 0xaf0 <vfprintf+0x1c2>
     aba:	82 2d       	mov	r24, r2
     abc:	90 e0       	ldi	r25, 0x00	; 0
     abe:	88 16       	cp	r8, r24
     ac0:	99 06       	cpc	r9, r25
     ac2:	b0 f4       	brcc	.+44     	; 0xaf0 <vfprintf+0x1c2>
     ac4:	b6 01       	movw	r22, r12
     ac6:	80 e2       	ldi	r24, 0x20	; 32
     ac8:	90 e0       	ldi	r25, 0x00	; 0
     aca:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <fputc>
     ace:	2a 94       	dec	r2
     ad0:	f4 cf       	rjmp	.-24     	; 0xaba <vfprintf+0x18c>
     ad2:	f5 01       	movw	r30, r10
     ad4:	37 fc       	sbrc	r3, 7
     ad6:	85 91       	lpm	r24, Z+
     ad8:	37 fe       	sbrs	r3, 7
     ada:	81 91       	ld	r24, Z+
     adc:	5f 01       	movw	r10, r30
     ade:	b6 01       	movw	r22, r12
     ae0:	90 e0       	ldi	r25, 0x00	; 0
     ae2:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <fputc>
     ae6:	21 10       	cpse	r2, r1
     ae8:	2a 94       	dec	r2
     aea:	21 e0       	ldi	r18, 0x01	; 1
     aec:	82 1a       	sub	r8, r18
     aee:	91 08       	sbc	r9, r1
     af0:	81 14       	cp	r8, r1
     af2:	91 04       	cpc	r9, r1
     af4:	71 f7       	brne	.-36     	; 0xad2 <vfprintf+0x1a4>
     af6:	e8 c0       	rjmp	.+464    	; 0xcc8 <vfprintf+0x39a>
     af8:	84 36       	cpi	r24, 0x64	; 100
     afa:	11 f0       	breq	.+4      	; 0xb00 <vfprintf+0x1d2>
     afc:	89 36       	cpi	r24, 0x69	; 105
     afe:	41 f5       	brne	.+80     	; 0xb50 <vfprintf+0x222>
     b00:	f8 01       	movw	r30, r16
     b02:	37 fe       	sbrs	r3, 7
     b04:	07 c0       	rjmp	.+14     	; 0xb14 <vfprintf+0x1e6>
     b06:	60 81       	ld	r22, Z
     b08:	71 81       	ldd	r23, Z+1	; 0x01
     b0a:	82 81       	ldd	r24, Z+2	; 0x02
     b0c:	93 81       	ldd	r25, Z+3	; 0x03
     b0e:	0c 5f       	subi	r16, 0xFC	; 252
     b10:	1f 4f       	sbci	r17, 0xFF	; 255
     b12:	08 c0       	rjmp	.+16     	; 0xb24 <vfprintf+0x1f6>
     b14:	60 81       	ld	r22, Z
     b16:	71 81       	ldd	r23, Z+1	; 0x01
     b18:	07 2e       	mov	r0, r23
     b1a:	00 0c       	add	r0, r0
     b1c:	88 0b       	sbc	r24, r24
     b1e:	99 0b       	sbc	r25, r25
     b20:	0e 5f       	subi	r16, 0xFE	; 254
     b22:	1f 4f       	sbci	r17, 0xFF	; 255
     b24:	f3 2d       	mov	r31, r3
     b26:	ff 76       	andi	r31, 0x6F	; 111
     b28:	3f 2e       	mov	r3, r31
     b2a:	97 ff       	sbrs	r25, 7
     b2c:	09 c0       	rjmp	.+18     	; 0xb40 <vfprintf+0x212>
     b2e:	90 95       	com	r25
     b30:	80 95       	com	r24
     b32:	70 95       	com	r23
     b34:	61 95       	neg	r22
     b36:	7f 4f       	sbci	r23, 0xFF	; 255
     b38:	8f 4f       	sbci	r24, 0xFF	; 255
     b3a:	9f 4f       	sbci	r25, 0xFF	; 255
     b3c:	f0 68       	ori	r31, 0x80	; 128
     b3e:	3f 2e       	mov	r3, r31
     b40:	2a e0       	ldi	r18, 0x0A	; 10
     b42:	30 e0       	ldi	r19, 0x00	; 0
     b44:	a3 01       	movw	r20, r6
     b46:	0e 94 0e 08 	call	0x101c	; 0x101c <__ultoa_invert>
     b4a:	88 2e       	mov	r8, r24
     b4c:	86 18       	sub	r8, r6
     b4e:	45 c0       	rjmp	.+138    	; 0xbda <vfprintf+0x2ac>
     b50:	85 37       	cpi	r24, 0x75	; 117
     b52:	31 f4       	brne	.+12     	; 0xb60 <vfprintf+0x232>
     b54:	23 2d       	mov	r18, r3
     b56:	2f 7e       	andi	r18, 0xEF	; 239
     b58:	b2 2e       	mov	r11, r18
     b5a:	2a e0       	ldi	r18, 0x0A	; 10
     b5c:	30 e0       	ldi	r19, 0x00	; 0
     b5e:	25 c0       	rjmp	.+74     	; 0xbaa <vfprintf+0x27c>
     b60:	93 2d       	mov	r25, r3
     b62:	99 7f       	andi	r25, 0xF9	; 249
     b64:	b9 2e       	mov	r11, r25
     b66:	8f 36       	cpi	r24, 0x6F	; 111
     b68:	c1 f0       	breq	.+48     	; 0xb9a <vfprintf+0x26c>
     b6a:	18 f4       	brcc	.+6      	; 0xb72 <vfprintf+0x244>
     b6c:	88 35       	cpi	r24, 0x58	; 88
     b6e:	79 f0       	breq	.+30     	; 0xb8e <vfprintf+0x260>
     b70:	b5 c0       	rjmp	.+362    	; 0xcdc <vfprintf+0x3ae>
     b72:	80 37       	cpi	r24, 0x70	; 112
     b74:	19 f0       	breq	.+6      	; 0xb7c <vfprintf+0x24e>
     b76:	88 37       	cpi	r24, 0x78	; 120
     b78:	21 f0       	breq	.+8      	; 0xb82 <vfprintf+0x254>
     b7a:	b0 c0       	rjmp	.+352    	; 0xcdc <vfprintf+0x3ae>
     b7c:	e9 2f       	mov	r30, r25
     b7e:	e0 61       	ori	r30, 0x10	; 16
     b80:	be 2e       	mov	r11, r30
     b82:	b4 fe       	sbrs	r11, 4
     b84:	0d c0       	rjmp	.+26     	; 0xba0 <vfprintf+0x272>
     b86:	fb 2d       	mov	r31, r11
     b88:	f4 60       	ori	r31, 0x04	; 4
     b8a:	bf 2e       	mov	r11, r31
     b8c:	09 c0       	rjmp	.+18     	; 0xba0 <vfprintf+0x272>
     b8e:	34 fe       	sbrs	r3, 4
     b90:	0a c0       	rjmp	.+20     	; 0xba6 <vfprintf+0x278>
     b92:	29 2f       	mov	r18, r25
     b94:	26 60       	ori	r18, 0x06	; 6
     b96:	b2 2e       	mov	r11, r18
     b98:	06 c0       	rjmp	.+12     	; 0xba6 <vfprintf+0x278>
     b9a:	28 e0       	ldi	r18, 0x08	; 8
     b9c:	30 e0       	ldi	r19, 0x00	; 0
     b9e:	05 c0       	rjmp	.+10     	; 0xbaa <vfprintf+0x27c>
     ba0:	20 e1       	ldi	r18, 0x10	; 16
     ba2:	30 e0       	ldi	r19, 0x00	; 0
     ba4:	02 c0       	rjmp	.+4      	; 0xbaa <vfprintf+0x27c>
     ba6:	20 e1       	ldi	r18, 0x10	; 16
     ba8:	32 e0       	ldi	r19, 0x02	; 2
     baa:	f8 01       	movw	r30, r16
     bac:	b7 fe       	sbrs	r11, 7
     bae:	07 c0       	rjmp	.+14     	; 0xbbe <vfprintf+0x290>
     bb0:	60 81       	ld	r22, Z
     bb2:	71 81       	ldd	r23, Z+1	; 0x01
     bb4:	82 81       	ldd	r24, Z+2	; 0x02
     bb6:	93 81       	ldd	r25, Z+3	; 0x03
     bb8:	0c 5f       	subi	r16, 0xFC	; 252
     bba:	1f 4f       	sbci	r17, 0xFF	; 255
     bbc:	06 c0       	rjmp	.+12     	; 0xbca <vfprintf+0x29c>
     bbe:	60 81       	ld	r22, Z
     bc0:	71 81       	ldd	r23, Z+1	; 0x01
     bc2:	80 e0       	ldi	r24, 0x00	; 0
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	0e 5f       	subi	r16, 0xFE	; 254
     bc8:	1f 4f       	sbci	r17, 0xFF	; 255
     bca:	a3 01       	movw	r20, r6
     bcc:	0e 94 0e 08 	call	0x101c	; 0x101c <__ultoa_invert>
     bd0:	88 2e       	mov	r8, r24
     bd2:	86 18       	sub	r8, r6
     bd4:	fb 2d       	mov	r31, r11
     bd6:	ff 77       	andi	r31, 0x7F	; 127
     bd8:	3f 2e       	mov	r3, r31
     bda:	36 fe       	sbrs	r3, 6
     bdc:	0d c0       	rjmp	.+26     	; 0xbf8 <vfprintf+0x2ca>
     bde:	23 2d       	mov	r18, r3
     be0:	2e 7f       	andi	r18, 0xFE	; 254
     be2:	a2 2e       	mov	r10, r18
     be4:	89 14       	cp	r8, r9
     be6:	58 f4       	brcc	.+22     	; 0xbfe <vfprintf+0x2d0>
     be8:	34 fe       	sbrs	r3, 4
     bea:	0b c0       	rjmp	.+22     	; 0xc02 <vfprintf+0x2d4>
     bec:	32 fc       	sbrc	r3, 2
     bee:	09 c0       	rjmp	.+18     	; 0xc02 <vfprintf+0x2d4>
     bf0:	83 2d       	mov	r24, r3
     bf2:	8e 7e       	andi	r24, 0xEE	; 238
     bf4:	a8 2e       	mov	r10, r24
     bf6:	05 c0       	rjmp	.+10     	; 0xc02 <vfprintf+0x2d4>
     bf8:	b8 2c       	mov	r11, r8
     bfa:	a3 2c       	mov	r10, r3
     bfc:	03 c0       	rjmp	.+6      	; 0xc04 <vfprintf+0x2d6>
     bfe:	b8 2c       	mov	r11, r8
     c00:	01 c0       	rjmp	.+2      	; 0xc04 <vfprintf+0x2d6>
     c02:	b9 2c       	mov	r11, r9
     c04:	a4 fe       	sbrs	r10, 4
     c06:	0f c0       	rjmp	.+30     	; 0xc26 <vfprintf+0x2f8>
     c08:	fe 01       	movw	r30, r28
     c0a:	e8 0d       	add	r30, r8
     c0c:	f1 1d       	adc	r31, r1
     c0e:	80 81       	ld	r24, Z
     c10:	80 33       	cpi	r24, 0x30	; 48
     c12:	21 f4       	brne	.+8      	; 0xc1c <vfprintf+0x2ee>
     c14:	9a 2d       	mov	r25, r10
     c16:	99 7e       	andi	r25, 0xE9	; 233
     c18:	a9 2e       	mov	r10, r25
     c1a:	09 c0       	rjmp	.+18     	; 0xc2e <vfprintf+0x300>
     c1c:	a2 fe       	sbrs	r10, 2
     c1e:	06 c0       	rjmp	.+12     	; 0xc2c <vfprintf+0x2fe>
     c20:	b3 94       	inc	r11
     c22:	b3 94       	inc	r11
     c24:	04 c0       	rjmp	.+8      	; 0xc2e <vfprintf+0x300>
     c26:	8a 2d       	mov	r24, r10
     c28:	86 78       	andi	r24, 0x86	; 134
     c2a:	09 f0       	breq	.+2      	; 0xc2e <vfprintf+0x300>
     c2c:	b3 94       	inc	r11
     c2e:	a3 fc       	sbrc	r10, 3
     c30:	11 c0       	rjmp	.+34     	; 0xc54 <vfprintf+0x326>
     c32:	a0 fe       	sbrs	r10, 0
     c34:	06 c0       	rjmp	.+12     	; 0xc42 <vfprintf+0x314>
     c36:	b2 14       	cp	r11, r2
     c38:	88 f4       	brcc	.+34     	; 0xc5c <vfprintf+0x32e>
     c3a:	28 0c       	add	r2, r8
     c3c:	92 2c       	mov	r9, r2
     c3e:	9b 18       	sub	r9, r11
     c40:	0e c0       	rjmp	.+28     	; 0xc5e <vfprintf+0x330>
     c42:	b2 14       	cp	r11, r2
     c44:	60 f4       	brcc	.+24     	; 0xc5e <vfprintf+0x330>
     c46:	b6 01       	movw	r22, r12
     c48:	80 e2       	ldi	r24, 0x20	; 32
     c4a:	90 e0       	ldi	r25, 0x00	; 0
     c4c:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <fputc>
     c50:	b3 94       	inc	r11
     c52:	f7 cf       	rjmp	.-18     	; 0xc42 <vfprintf+0x314>
     c54:	b2 14       	cp	r11, r2
     c56:	18 f4       	brcc	.+6      	; 0xc5e <vfprintf+0x330>
     c58:	2b 18       	sub	r2, r11
     c5a:	02 c0       	rjmp	.+4      	; 0xc60 <vfprintf+0x332>
     c5c:	98 2c       	mov	r9, r8
     c5e:	21 2c       	mov	r2, r1
     c60:	a4 fe       	sbrs	r10, 4
     c62:	10 c0       	rjmp	.+32     	; 0xc84 <vfprintf+0x356>
     c64:	b6 01       	movw	r22, r12
     c66:	80 e3       	ldi	r24, 0x30	; 48
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <fputc>
     c6e:	a2 fe       	sbrs	r10, 2
     c70:	17 c0       	rjmp	.+46     	; 0xca0 <vfprintf+0x372>
     c72:	a1 fc       	sbrc	r10, 1
     c74:	03 c0       	rjmp	.+6      	; 0xc7c <vfprintf+0x34e>
     c76:	88 e7       	ldi	r24, 0x78	; 120
     c78:	90 e0       	ldi	r25, 0x00	; 0
     c7a:	02 c0       	rjmp	.+4      	; 0xc80 <vfprintf+0x352>
     c7c:	88 e5       	ldi	r24, 0x58	; 88
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	b6 01       	movw	r22, r12
     c82:	0c c0       	rjmp	.+24     	; 0xc9c <vfprintf+0x36e>
     c84:	8a 2d       	mov	r24, r10
     c86:	86 78       	andi	r24, 0x86	; 134
     c88:	59 f0       	breq	.+22     	; 0xca0 <vfprintf+0x372>
     c8a:	a1 fe       	sbrs	r10, 1
     c8c:	02 c0       	rjmp	.+4      	; 0xc92 <vfprintf+0x364>
     c8e:	8b e2       	ldi	r24, 0x2B	; 43
     c90:	01 c0       	rjmp	.+2      	; 0xc94 <vfprintf+0x366>
     c92:	80 e2       	ldi	r24, 0x20	; 32
     c94:	a7 fc       	sbrc	r10, 7
     c96:	8d e2       	ldi	r24, 0x2D	; 45
     c98:	b6 01       	movw	r22, r12
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <fputc>
     ca0:	89 14       	cp	r8, r9
     ca2:	38 f4       	brcc	.+14     	; 0xcb2 <vfprintf+0x384>
     ca4:	b6 01       	movw	r22, r12
     ca6:	80 e3       	ldi	r24, 0x30	; 48
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <fputc>
     cae:	9a 94       	dec	r9
     cb0:	f7 cf       	rjmp	.-18     	; 0xca0 <vfprintf+0x372>
     cb2:	8a 94       	dec	r8
     cb4:	f3 01       	movw	r30, r6
     cb6:	e8 0d       	add	r30, r8
     cb8:	f1 1d       	adc	r31, r1
     cba:	80 81       	ld	r24, Z
     cbc:	b6 01       	movw	r22, r12
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <fputc>
     cc4:	81 10       	cpse	r8, r1
     cc6:	f5 cf       	rjmp	.-22     	; 0xcb2 <vfprintf+0x384>
     cc8:	22 20       	and	r2, r2
     cca:	09 f4       	brne	.+2      	; 0xcce <vfprintf+0x3a0>
     ccc:	42 ce       	rjmp	.-892    	; 0x952 <vfprintf+0x24>
     cce:	b6 01       	movw	r22, r12
     cd0:	80 e2       	ldi	r24, 0x20	; 32
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <fputc>
     cd8:	2a 94       	dec	r2
     cda:	f6 cf       	rjmp	.-20     	; 0xcc8 <vfprintf+0x39a>
     cdc:	f6 01       	movw	r30, r12
     cde:	86 81       	ldd	r24, Z+6	; 0x06
     ce0:	97 81       	ldd	r25, Z+7	; 0x07
     ce2:	02 c0       	rjmp	.+4      	; 0xce8 <vfprintf+0x3ba>
     ce4:	8f ef       	ldi	r24, 0xFF	; 255
     ce6:	9f ef       	ldi	r25, 0xFF	; 255
     ce8:	2b 96       	adiw	r28, 0x0b	; 11
     cea:	e2 e1       	ldi	r30, 0x12	; 18
     cec:	0c 94 88 08 	jmp	0x1110	; 0x1110 <__epilogue_restores__>

00000cf0 <calloc>:
     cf0:	0f 93       	push	r16
     cf2:	1f 93       	push	r17
     cf4:	cf 93       	push	r28
     cf6:	df 93       	push	r29
     cf8:	86 9f       	mul	r24, r22
     cfa:	80 01       	movw	r16, r0
     cfc:	87 9f       	mul	r24, r23
     cfe:	10 0d       	add	r17, r0
     d00:	96 9f       	mul	r25, r22
     d02:	10 0d       	add	r17, r0
     d04:	11 24       	eor	r1, r1
     d06:	c8 01       	movw	r24, r16
     d08:	0e 94 94 06 	call	0xd28	; 0xd28 <malloc>
     d0c:	ec 01       	movw	r28, r24
     d0e:	00 97       	sbiw	r24, 0x00	; 0
     d10:	29 f0       	breq	.+10     	; 0xd1c <calloc+0x2c>
     d12:	a8 01       	movw	r20, r16
     d14:	60 e0       	ldi	r22, 0x00	; 0
     d16:	70 e0       	ldi	r23, 0x00	; 0
     d18:	0e 94 c0 07 	call	0xf80	; 0xf80 <memset>
     d1c:	ce 01       	movw	r24, r28
     d1e:	df 91       	pop	r29
     d20:	cf 91       	pop	r28
     d22:	1f 91       	pop	r17
     d24:	0f 91       	pop	r16
     d26:	08 95       	ret

00000d28 <malloc>:
     d28:	0f 93       	push	r16
     d2a:	1f 93       	push	r17
     d2c:	cf 93       	push	r28
     d2e:	df 93       	push	r29
     d30:	82 30       	cpi	r24, 0x02	; 2
     d32:	91 05       	cpc	r25, r1
     d34:	10 f4       	brcc	.+4      	; 0xd3a <malloc+0x12>
     d36:	82 e0       	ldi	r24, 0x02	; 2
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	e0 91 a2 01 	lds	r30, 0x01A2	; 0x8001a2 <__flp>
     d3e:	f0 91 a3 01 	lds	r31, 0x01A3	; 0x8001a3 <__flp+0x1>
     d42:	20 e0       	ldi	r18, 0x00	; 0
     d44:	30 e0       	ldi	r19, 0x00	; 0
     d46:	a0 e0       	ldi	r26, 0x00	; 0
     d48:	b0 e0       	ldi	r27, 0x00	; 0
     d4a:	30 97       	sbiw	r30, 0x00	; 0
     d4c:	19 f1       	breq	.+70     	; 0xd94 <malloc+0x6c>
     d4e:	40 81       	ld	r20, Z
     d50:	51 81       	ldd	r21, Z+1	; 0x01
     d52:	02 81       	ldd	r16, Z+2	; 0x02
     d54:	13 81       	ldd	r17, Z+3	; 0x03
     d56:	48 17       	cp	r20, r24
     d58:	59 07       	cpc	r21, r25
     d5a:	c8 f0       	brcs	.+50     	; 0xd8e <malloc+0x66>
     d5c:	84 17       	cp	r24, r20
     d5e:	95 07       	cpc	r25, r21
     d60:	69 f4       	brne	.+26     	; 0xd7c <malloc+0x54>
     d62:	10 97       	sbiw	r26, 0x00	; 0
     d64:	31 f0       	breq	.+12     	; 0xd72 <malloc+0x4a>
     d66:	12 96       	adiw	r26, 0x02	; 2
     d68:	0c 93       	st	X, r16
     d6a:	12 97       	sbiw	r26, 0x02	; 2
     d6c:	13 96       	adiw	r26, 0x03	; 3
     d6e:	1c 93       	st	X, r17
     d70:	27 c0       	rjmp	.+78     	; 0xdc0 <malloc+0x98>
     d72:	00 93 a2 01 	sts	0x01A2, r16	; 0x8001a2 <__flp>
     d76:	10 93 a3 01 	sts	0x01A3, r17	; 0x8001a3 <__flp+0x1>
     d7a:	22 c0       	rjmp	.+68     	; 0xdc0 <malloc+0x98>
     d7c:	21 15       	cp	r18, r1
     d7e:	31 05       	cpc	r19, r1
     d80:	19 f0       	breq	.+6      	; 0xd88 <malloc+0x60>
     d82:	42 17       	cp	r20, r18
     d84:	53 07       	cpc	r21, r19
     d86:	18 f4       	brcc	.+6      	; 0xd8e <malloc+0x66>
     d88:	9a 01       	movw	r18, r20
     d8a:	bd 01       	movw	r22, r26
     d8c:	ef 01       	movw	r28, r30
     d8e:	df 01       	movw	r26, r30
     d90:	f8 01       	movw	r30, r16
     d92:	db cf       	rjmp	.-74     	; 0xd4a <malloc+0x22>
     d94:	21 15       	cp	r18, r1
     d96:	31 05       	cpc	r19, r1
     d98:	f9 f0       	breq	.+62     	; 0xdd8 <malloc+0xb0>
     d9a:	28 1b       	sub	r18, r24
     d9c:	39 0b       	sbc	r19, r25
     d9e:	24 30       	cpi	r18, 0x04	; 4
     da0:	31 05       	cpc	r19, r1
     da2:	80 f4       	brcc	.+32     	; 0xdc4 <malloc+0x9c>
     da4:	8a 81       	ldd	r24, Y+2	; 0x02
     da6:	9b 81       	ldd	r25, Y+3	; 0x03
     da8:	61 15       	cp	r22, r1
     daa:	71 05       	cpc	r23, r1
     dac:	21 f0       	breq	.+8      	; 0xdb6 <malloc+0x8e>
     dae:	fb 01       	movw	r30, r22
     db0:	93 83       	std	Z+3, r25	; 0x03
     db2:	82 83       	std	Z+2, r24	; 0x02
     db4:	04 c0       	rjmp	.+8      	; 0xdbe <malloc+0x96>
     db6:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <__flp+0x1>
     dba:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <__flp>
     dbe:	fe 01       	movw	r30, r28
     dc0:	32 96       	adiw	r30, 0x02	; 2
     dc2:	44 c0       	rjmp	.+136    	; 0xe4c <malloc+0x124>
     dc4:	fe 01       	movw	r30, r28
     dc6:	e2 0f       	add	r30, r18
     dc8:	f3 1f       	adc	r31, r19
     dca:	81 93       	st	Z+, r24
     dcc:	91 93       	st	Z+, r25
     dce:	22 50       	subi	r18, 0x02	; 2
     dd0:	31 09       	sbc	r19, r1
     dd2:	39 83       	std	Y+1, r19	; 0x01
     dd4:	28 83       	st	Y, r18
     dd6:	3a c0       	rjmp	.+116    	; 0xe4c <malloc+0x124>
     dd8:	20 91 a0 01 	lds	r18, 0x01A0	; 0x8001a0 <__brkval>
     ddc:	30 91 a1 01 	lds	r19, 0x01A1	; 0x8001a1 <__brkval+0x1>
     de0:	23 2b       	or	r18, r19
     de2:	41 f4       	brne	.+16     	; 0xdf4 <malloc+0xcc>
     de4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     de8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     dec:	30 93 a1 01 	sts	0x01A1, r19	; 0x8001a1 <__brkval+0x1>
     df0:	20 93 a0 01 	sts	0x01A0, r18	; 0x8001a0 <__brkval>
     df4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     df8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     dfc:	21 15       	cp	r18, r1
     dfe:	31 05       	cpc	r19, r1
     e00:	41 f4       	brne	.+16     	; 0xe12 <malloc+0xea>
     e02:	2d b7       	in	r18, 0x3d	; 61
     e04:	3e b7       	in	r19, 0x3e	; 62
     e06:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     e0a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     e0e:	24 1b       	sub	r18, r20
     e10:	35 0b       	sbc	r19, r21
     e12:	e0 91 a0 01 	lds	r30, 0x01A0	; 0x8001a0 <__brkval>
     e16:	f0 91 a1 01 	lds	r31, 0x01A1	; 0x8001a1 <__brkval+0x1>
     e1a:	e2 17       	cp	r30, r18
     e1c:	f3 07       	cpc	r31, r19
     e1e:	a0 f4       	brcc	.+40     	; 0xe48 <malloc+0x120>
     e20:	2e 1b       	sub	r18, r30
     e22:	3f 0b       	sbc	r19, r31
     e24:	28 17       	cp	r18, r24
     e26:	39 07       	cpc	r19, r25
     e28:	78 f0       	brcs	.+30     	; 0xe48 <malloc+0x120>
     e2a:	ac 01       	movw	r20, r24
     e2c:	4e 5f       	subi	r20, 0xFE	; 254
     e2e:	5f 4f       	sbci	r21, 0xFF	; 255
     e30:	24 17       	cp	r18, r20
     e32:	35 07       	cpc	r19, r21
     e34:	48 f0       	brcs	.+18     	; 0xe48 <malloc+0x120>
     e36:	4e 0f       	add	r20, r30
     e38:	5f 1f       	adc	r21, r31
     e3a:	50 93 a1 01 	sts	0x01A1, r21	; 0x8001a1 <__brkval+0x1>
     e3e:	40 93 a0 01 	sts	0x01A0, r20	; 0x8001a0 <__brkval>
     e42:	81 93       	st	Z+, r24
     e44:	91 93       	st	Z+, r25
     e46:	02 c0       	rjmp	.+4      	; 0xe4c <malloc+0x124>
     e48:	e0 e0       	ldi	r30, 0x00	; 0
     e4a:	f0 e0       	ldi	r31, 0x00	; 0
     e4c:	cf 01       	movw	r24, r30
     e4e:	df 91       	pop	r29
     e50:	cf 91       	pop	r28
     e52:	1f 91       	pop	r17
     e54:	0f 91       	pop	r16
     e56:	08 95       	ret

00000e58 <free>:
     e58:	cf 93       	push	r28
     e5a:	df 93       	push	r29
     e5c:	00 97       	sbiw	r24, 0x00	; 0
     e5e:	09 f4       	brne	.+2      	; 0xe62 <free+0xa>
     e60:	81 c0       	rjmp	.+258    	; 0xf64 <free+0x10c>
     e62:	fc 01       	movw	r30, r24
     e64:	32 97       	sbiw	r30, 0x02	; 2
     e66:	13 82       	std	Z+3, r1	; 0x03
     e68:	12 82       	std	Z+2, r1	; 0x02
     e6a:	a0 91 a2 01 	lds	r26, 0x01A2	; 0x8001a2 <__flp>
     e6e:	b0 91 a3 01 	lds	r27, 0x01A3	; 0x8001a3 <__flp+0x1>
     e72:	10 97       	sbiw	r26, 0x00	; 0
     e74:	81 f4       	brne	.+32     	; 0xe96 <free+0x3e>
     e76:	20 81       	ld	r18, Z
     e78:	31 81       	ldd	r19, Z+1	; 0x01
     e7a:	82 0f       	add	r24, r18
     e7c:	93 1f       	adc	r25, r19
     e7e:	20 91 a0 01 	lds	r18, 0x01A0	; 0x8001a0 <__brkval>
     e82:	30 91 a1 01 	lds	r19, 0x01A1	; 0x8001a1 <__brkval+0x1>
     e86:	28 17       	cp	r18, r24
     e88:	39 07       	cpc	r19, r25
     e8a:	51 f5       	brne	.+84     	; 0xee0 <free+0x88>
     e8c:	f0 93 a1 01 	sts	0x01A1, r31	; 0x8001a1 <__brkval+0x1>
     e90:	e0 93 a0 01 	sts	0x01A0, r30	; 0x8001a0 <__brkval>
     e94:	67 c0       	rjmp	.+206    	; 0xf64 <free+0x10c>
     e96:	ed 01       	movw	r28, r26
     e98:	20 e0       	ldi	r18, 0x00	; 0
     e9a:	30 e0       	ldi	r19, 0x00	; 0
     e9c:	ce 17       	cp	r28, r30
     e9e:	df 07       	cpc	r29, r31
     ea0:	40 f4       	brcc	.+16     	; 0xeb2 <free+0x5a>
     ea2:	4a 81       	ldd	r20, Y+2	; 0x02
     ea4:	5b 81       	ldd	r21, Y+3	; 0x03
     ea6:	9e 01       	movw	r18, r28
     ea8:	41 15       	cp	r20, r1
     eaa:	51 05       	cpc	r21, r1
     eac:	f1 f0       	breq	.+60     	; 0xeea <free+0x92>
     eae:	ea 01       	movw	r28, r20
     eb0:	f5 cf       	rjmp	.-22     	; 0xe9c <free+0x44>
     eb2:	d3 83       	std	Z+3, r29	; 0x03
     eb4:	c2 83       	std	Z+2, r28	; 0x02
     eb6:	40 81       	ld	r20, Z
     eb8:	51 81       	ldd	r21, Z+1	; 0x01
     eba:	84 0f       	add	r24, r20
     ebc:	95 1f       	adc	r25, r21
     ebe:	c8 17       	cp	r28, r24
     ec0:	d9 07       	cpc	r29, r25
     ec2:	59 f4       	brne	.+22     	; 0xeda <free+0x82>
     ec4:	88 81       	ld	r24, Y
     ec6:	99 81       	ldd	r25, Y+1	; 0x01
     ec8:	84 0f       	add	r24, r20
     eca:	95 1f       	adc	r25, r21
     ecc:	02 96       	adiw	r24, 0x02	; 2
     ece:	91 83       	std	Z+1, r25	; 0x01
     ed0:	80 83       	st	Z, r24
     ed2:	8a 81       	ldd	r24, Y+2	; 0x02
     ed4:	9b 81       	ldd	r25, Y+3	; 0x03
     ed6:	93 83       	std	Z+3, r25	; 0x03
     ed8:	82 83       	std	Z+2, r24	; 0x02
     eda:	21 15       	cp	r18, r1
     edc:	31 05       	cpc	r19, r1
     ede:	29 f4       	brne	.+10     	; 0xeea <free+0x92>
     ee0:	f0 93 a3 01 	sts	0x01A3, r31	; 0x8001a3 <__flp+0x1>
     ee4:	e0 93 a2 01 	sts	0x01A2, r30	; 0x8001a2 <__flp>
     ee8:	3d c0       	rjmp	.+122    	; 0xf64 <free+0x10c>
     eea:	e9 01       	movw	r28, r18
     eec:	fb 83       	std	Y+3, r31	; 0x03
     eee:	ea 83       	std	Y+2, r30	; 0x02
     ef0:	49 91       	ld	r20, Y+
     ef2:	59 91       	ld	r21, Y+
     ef4:	c4 0f       	add	r28, r20
     ef6:	d5 1f       	adc	r29, r21
     ef8:	ec 17       	cp	r30, r28
     efa:	fd 07       	cpc	r31, r29
     efc:	61 f4       	brne	.+24     	; 0xf16 <free+0xbe>
     efe:	80 81       	ld	r24, Z
     f00:	91 81       	ldd	r25, Z+1	; 0x01
     f02:	84 0f       	add	r24, r20
     f04:	95 1f       	adc	r25, r21
     f06:	02 96       	adiw	r24, 0x02	; 2
     f08:	e9 01       	movw	r28, r18
     f0a:	99 83       	std	Y+1, r25	; 0x01
     f0c:	88 83       	st	Y, r24
     f0e:	82 81       	ldd	r24, Z+2	; 0x02
     f10:	93 81       	ldd	r25, Z+3	; 0x03
     f12:	9b 83       	std	Y+3, r25	; 0x03
     f14:	8a 83       	std	Y+2, r24	; 0x02
     f16:	e0 e0       	ldi	r30, 0x00	; 0
     f18:	f0 e0       	ldi	r31, 0x00	; 0
     f1a:	12 96       	adiw	r26, 0x02	; 2
     f1c:	8d 91       	ld	r24, X+
     f1e:	9c 91       	ld	r25, X
     f20:	13 97       	sbiw	r26, 0x03	; 3
     f22:	00 97       	sbiw	r24, 0x00	; 0
     f24:	19 f0       	breq	.+6      	; 0xf2c <free+0xd4>
     f26:	fd 01       	movw	r30, r26
     f28:	dc 01       	movw	r26, r24
     f2a:	f7 cf       	rjmp	.-18     	; 0xf1a <free+0xc2>
     f2c:	8d 91       	ld	r24, X+
     f2e:	9c 91       	ld	r25, X
     f30:	11 97       	sbiw	r26, 0x01	; 1
     f32:	9d 01       	movw	r18, r26
     f34:	2e 5f       	subi	r18, 0xFE	; 254
     f36:	3f 4f       	sbci	r19, 0xFF	; 255
     f38:	82 0f       	add	r24, r18
     f3a:	93 1f       	adc	r25, r19
     f3c:	20 91 a0 01 	lds	r18, 0x01A0	; 0x8001a0 <__brkval>
     f40:	30 91 a1 01 	lds	r19, 0x01A1	; 0x8001a1 <__brkval+0x1>
     f44:	28 17       	cp	r18, r24
     f46:	39 07       	cpc	r19, r25
     f48:	69 f4       	brne	.+26     	; 0xf64 <free+0x10c>
     f4a:	30 97       	sbiw	r30, 0x00	; 0
     f4c:	29 f4       	brne	.+10     	; 0xf58 <free+0x100>
     f4e:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <__flp+0x1>
     f52:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <__flp>
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <free+0x104>
     f58:	13 82       	std	Z+3, r1	; 0x03
     f5a:	12 82       	std	Z+2, r1	; 0x02
     f5c:	b0 93 a1 01 	sts	0x01A1, r27	; 0x8001a1 <__brkval+0x1>
     f60:	a0 93 a0 01 	sts	0x01A0, r26	; 0x8001a0 <__brkval>
     f64:	df 91       	pop	r29
     f66:	cf 91       	pop	r28
     f68:	08 95       	ret

00000f6a <strnlen_P>:
     f6a:	fc 01       	movw	r30, r24
     f6c:	05 90       	lpm	r0, Z+
     f6e:	61 50       	subi	r22, 0x01	; 1
     f70:	70 40       	sbci	r23, 0x00	; 0
     f72:	01 10       	cpse	r0, r1
     f74:	d8 f7       	brcc	.-10     	; 0xf6c <strnlen_P+0x2>
     f76:	80 95       	com	r24
     f78:	90 95       	com	r25
     f7a:	8e 0f       	add	r24, r30
     f7c:	9f 1f       	adc	r25, r31
     f7e:	08 95       	ret

00000f80 <memset>:
     f80:	dc 01       	movw	r26, r24
     f82:	01 c0       	rjmp	.+2      	; 0xf86 <memset+0x6>
     f84:	6d 93       	st	X+, r22
     f86:	41 50       	subi	r20, 0x01	; 1
     f88:	50 40       	sbci	r21, 0x00	; 0
     f8a:	e0 f7       	brcc	.-8      	; 0xf84 <memset+0x4>
     f8c:	08 95       	ret

00000f8e <strnlen>:
     f8e:	fc 01       	movw	r30, r24
     f90:	61 50       	subi	r22, 0x01	; 1
     f92:	70 40       	sbci	r23, 0x00	; 0
     f94:	01 90       	ld	r0, Z+
     f96:	01 10       	cpse	r0, r1
     f98:	d8 f7       	brcc	.-10     	; 0xf90 <strnlen+0x2>
     f9a:	80 95       	com	r24
     f9c:	90 95       	com	r25
     f9e:	8e 0f       	add	r24, r30
     fa0:	9f 1f       	adc	r25, r31
     fa2:	08 95       	ret

00000fa4 <fputc>:
     fa4:	0f 93       	push	r16
     fa6:	1f 93       	push	r17
     fa8:	cf 93       	push	r28
     faa:	df 93       	push	r29
     fac:	fb 01       	movw	r30, r22
     fae:	23 81       	ldd	r18, Z+3	; 0x03
     fb0:	21 fd       	sbrc	r18, 1
     fb2:	03 c0       	rjmp	.+6      	; 0xfba <fputc+0x16>
     fb4:	8f ef       	ldi	r24, 0xFF	; 255
     fb6:	9f ef       	ldi	r25, 0xFF	; 255
     fb8:	2c c0       	rjmp	.+88     	; 0x1012 <fputc+0x6e>
     fba:	22 ff       	sbrs	r18, 2
     fbc:	16 c0       	rjmp	.+44     	; 0xfea <fputc+0x46>
     fbe:	46 81       	ldd	r20, Z+6	; 0x06
     fc0:	57 81       	ldd	r21, Z+7	; 0x07
     fc2:	24 81       	ldd	r18, Z+4	; 0x04
     fc4:	35 81       	ldd	r19, Z+5	; 0x05
     fc6:	42 17       	cp	r20, r18
     fc8:	53 07       	cpc	r21, r19
     fca:	44 f4       	brge	.+16     	; 0xfdc <fputc+0x38>
     fcc:	a0 81       	ld	r26, Z
     fce:	b1 81       	ldd	r27, Z+1	; 0x01
     fd0:	9d 01       	movw	r18, r26
     fd2:	2f 5f       	subi	r18, 0xFF	; 255
     fd4:	3f 4f       	sbci	r19, 0xFF	; 255
     fd6:	31 83       	std	Z+1, r19	; 0x01
     fd8:	20 83       	st	Z, r18
     fda:	8c 93       	st	X, r24
     fdc:	26 81       	ldd	r18, Z+6	; 0x06
     fde:	37 81       	ldd	r19, Z+7	; 0x07
     fe0:	2f 5f       	subi	r18, 0xFF	; 255
     fe2:	3f 4f       	sbci	r19, 0xFF	; 255
     fe4:	37 83       	std	Z+7, r19	; 0x07
     fe6:	26 83       	std	Z+6, r18	; 0x06
     fe8:	14 c0       	rjmp	.+40     	; 0x1012 <fputc+0x6e>
     fea:	8b 01       	movw	r16, r22
     fec:	ec 01       	movw	r28, r24
     fee:	fb 01       	movw	r30, r22
     ff0:	00 84       	ldd	r0, Z+8	; 0x08
     ff2:	f1 85       	ldd	r31, Z+9	; 0x09
     ff4:	e0 2d       	mov	r30, r0
     ff6:	09 95       	icall
     ff8:	89 2b       	or	r24, r25
     ffa:	e1 f6       	brne	.-72     	; 0xfb4 <fputc+0x10>
     ffc:	d8 01       	movw	r26, r16
     ffe:	16 96       	adiw	r26, 0x06	; 6
    1000:	8d 91       	ld	r24, X+
    1002:	9c 91       	ld	r25, X
    1004:	17 97       	sbiw	r26, 0x07	; 7
    1006:	01 96       	adiw	r24, 0x01	; 1
    1008:	17 96       	adiw	r26, 0x07	; 7
    100a:	9c 93       	st	X, r25
    100c:	8e 93       	st	-X, r24
    100e:	16 97       	sbiw	r26, 0x06	; 6
    1010:	ce 01       	movw	r24, r28
    1012:	df 91       	pop	r29
    1014:	cf 91       	pop	r28
    1016:	1f 91       	pop	r17
    1018:	0f 91       	pop	r16
    101a:	08 95       	ret

0000101c <__ultoa_invert>:
    101c:	fa 01       	movw	r30, r20
    101e:	aa 27       	eor	r26, r26
    1020:	28 30       	cpi	r18, 0x08	; 8
    1022:	51 f1       	breq	.+84     	; 0x1078 <__ultoa_invert+0x5c>
    1024:	20 31       	cpi	r18, 0x10	; 16
    1026:	81 f1       	breq	.+96     	; 0x1088 <__ultoa_invert+0x6c>
    1028:	e8 94       	clt
    102a:	6f 93       	push	r22
    102c:	6e 7f       	andi	r22, 0xFE	; 254
    102e:	6e 5f       	subi	r22, 0xFE	; 254
    1030:	7f 4f       	sbci	r23, 0xFF	; 255
    1032:	8f 4f       	sbci	r24, 0xFF	; 255
    1034:	9f 4f       	sbci	r25, 0xFF	; 255
    1036:	af 4f       	sbci	r26, 0xFF	; 255
    1038:	b1 e0       	ldi	r27, 0x01	; 1
    103a:	3e d0       	rcall	.+124    	; 0x10b8 <__ultoa_invert+0x9c>
    103c:	b4 e0       	ldi	r27, 0x04	; 4
    103e:	3c d0       	rcall	.+120    	; 0x10b8 <__ultoa_invert+0x9c>
    1040:	67 0f       	add	r22, r23
    1042:	78 1f       	adc	r23, r24
    1044:	89 1f       	adc	r24, r25
    1046:	9a 1f       	adc	r25, r26
    1048:	a1 1d       	adc	r26, r1
    104a:	68 0f       	add	r22, r24
    104c:	79 1f       	adc	r23, r25
    104e:	8a 1f       	adc	r24, r26
    1050:	91 1d       	adc	r25, r1
    1052:	a1 1d       	adc	r26, r1
    1054:	6a 0f       	add	r22, r26
    1056:	71 1d       	adc	r23, r1
    1058:	81 1d       	adc	r24, r1
    105a:	91 1d       	adc	r25, r1
    105c:	a1 1d       	adc	r26, r1
    105e:	20 d0       	rcall	.+64     	; 0x10a0 <__ultoa_invert+0x84>
    1060:	09 f4       	brne	.+2      	; 0x1064 <__ultoa_invert+0x48>
    1062:	68 94       	set
    1064:	3f 91       	pop	r19
    1066:	2a e0       	ldi	r18, 0x0A	; 10
    1068:	26 9f       	mul	r18, r22
    106a:	11 24       	eor	r1, r1
    106c:	30 19       	sub	r19, r0
    106e:	30 5d       	subi	r19, 0xD0	; 208
    1070:	31 93       	st	Z+, r19
    1072:	de f6       	brtc	.-74     	; 0x102a <__ultoa_invert+0xe>
    1074:	cf 01       	movw	r24, r30
    1076:	08 95       	ret
    1078:	46 2f       	mov	r20, r22
    107a:	47 70       	andi	r20, 0x07	; 7
    107c:	40 5d       	subi	r20, 0xD0	; 208
    107e:	41 93       	st	Z+, r20
    1080:	b3 e0       	ldi	r27, 0x03	; 3
    1082:	0f d0       	rcall	.+30     	; 0x10a2 <__ultoa_invert+0x86>
    1084:	c9 f7       	brne	.-14     	; 0x1078 <__ultoa_invert+0x5c>
    1086:	f6 cf       	rjmp	.-20     	; 0x1074 <__ultoa_invert+0x58>
    1088:	46 2f       	mov	r20, r22
    108a:	4f 70       	andi	r20, 0x0F	; 15
    108c:	40 5d       	subi	r20, 0xD0	; 208
    108e:	4a 33       	cpi	r20, 0x3A	; 58
    1090:	18 f0       	brcs	.+6      	; 0x1098 <__ultoa_invert+0x7c>
    1092:	49 5d       	subi	r20, 0xD9	; 217
    1094:	31 fd       	sbrc	r19, 1
    1096:	40 52       	subi	r20, 0x20	; 32
    1098:	41 93       	st	Z+, r20
    109a:	02 d0       	rcall	.+4      	; 0x10a0 <__ultoa_invert+0x84>
    109c:	a9 f7       	brne	.-22     	; 0x1088 <__ultoa_invert+0x6c>
    109e:	ea cf       	rjmp	.-44     	; 0x1074 <__ultoa_invert+0x58>
    10a0:	b4 e0       	ldi	r27, 0x04	; 4
    10a2:	a6 95       	lsr	r26
    10a4:	97 95       	ror	r25
    10a6:	87 95       	ror	r24
    10a8:	77 95       	ror	r23
    10aa:	67 95       	ror	r22
    10ac:	ba 95       	dec	r27
    10ae:	c9 f7       	brne	.-14     	; 0x10a2 <__ultoa_invert+0x86>
    10b0:	00 97       	sbiw	r24, 0x00	; 0
    10b2:	61 05       	cpc	r22, r1
    10b4:	71 05       	cpc	r23, r1
    10b6:	08 95       	ret
    10b8:	9b 01       	movw	r18, r22
    10ba:	ac 01       	movw	r20, r24
    10bc:	0a 2e       	mov	r0, r26
    10be:	06 94       	lsr	r0
    10c0:	57 95       	ror	r21
    10c2:	47 95       	ror	r20
    10c4:	37 95       	ror	r19
    10c6:	27 95       	ror	r18
    10c8:	ba 95       	dec	r27
    10ca:	c9 f7       	brne	.-14     	; 0x10be <__ultoa_invert+0xa2>
    10cc:	62 0f       	add	r22, r18
    10ce:	73 1f       	adc	r23, r19
    10d0:	84 1f       	adc	r24, r20
    10d2:	95 1f       	adc	r25, r21
    10d4:	a0 1d       	adc	r26, r0
    10d6:	08 95       	ret

000010d8 <__prologue_saves__>:
    10d8:	2f 92       	push	r2
    10da:	3f 92       	push	r3
    10dc:	4f 92       	push	r4
    10de:	5f 92       	push	r5
    10e0:	6f 92       	push	r6
    10e2:	7f 92       	push	r7
    10e4:	8f 92       	push	r8
    10e6:	9f 92       	push	r9
    10e8:	af 92       	push	r10
    10ea:	bf 92       	push	r11
    10ec:	cf 92       	push	r12
    10ee:	df 92       	push	r13
    10f0:	ef 92       	push	r14
    10f2:	ff 92       	push	r15
    10f4:	0f 93       	push	r16
    10f6:	1f 93       	push	r17
    10f8:	cf 93       	push	r28
    10fa:	df 93       	push	r29
    10fc:	cd b7       	in	r28, 0x3d	; 61
    10fe:	de b7       	in	r29, 0x3e	; 62
    1100:	ca 1b       	sub	r28, r26
    1102:	db 0b       	sbc	r29, r27
    1104:	0f b6       	in	r0, 0x3f	; 63
    1106:	f8 94       	cli
    1108:	de bf       	out	0x3e, r29	; 62
    110a:	0f be       	out	0x3f, r0	; 63
    110c:	cd bf       	out	0x3d, r28	; 61
    110e:	09 94       	ijmp

00001110 <__epilogue_restores__>:
    1110:	2a 88       	ldd	r2, Y+18	; 0x12
    1112:	39 88       	ldd	r3, Y+17	; 0x11
    1114:	48 88       	ldd	r4, Y+16	; 0x10
    1116:	5f 84       	ldd	r5, Y+15	; 0x0f
    1118:	6e 84       	ldd	r6, Y+14	; 0x0e
    111a:	7d 84       	ldd	r7, Y+13	; 0x0d
    111c:	8c 84       	ldd	r8, Y+12	; 0x0c
    111e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1120:	aa 84       	ldd	r10, Y+10	; 0x0a
    1122:	b9 84       	ldd	r11, Y+9	; 0x09
    1124:	c8 84       	ldd	r12, Y+8	; 0x08
    1126:	df 80       	ldd	r13, Y+7	; 0x07
    1128:	ee 80       	ldd	r14, Y+6	; 0x06
    112a:	fd 80       	ldd	r15, Y+5	; 0x05
    112c:	0c 81       	ldd	r16, Y+4	; 0x04
    112e:	1b 81       	ldd	r17, Y+3	; 0x03
    1130:	aa 81       	ldd	r26, Y+2	; 0x02
    1132:	b9 81       	ldd	r27, Y+1	; 0x01
    1134:	ce 0f       	add	r28, r30
    1136:	d1 1d       	adc	r29, r1
    1138:	0f b6       	in	r0, 0x3f	; 63
    113a:	f8 94       	cli
    113c:	de bf       	out	0x3e, r29	; 62
    113e:	0f be       	out	0x3f, r0	; 63
    1140:	cd bf       	out	0x3d, r28	; 61
    1142:	ed 01       	movw	r28, r26
    1144:	08 95       	ret

00001146 <_exit>:
    1146:	f8 94       	cli

00001148 <__stop_program>:
    1148:	ff cf       	rjmp	.-2      	; 0x1148 <__stop_program>
